syntax = "proto3";
package terra.tx.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/tx/v1beta1/tx.proto";

option (gogoproto.goproto_registration) = true;
option go_package                       = "github.com/terra-money/core/custom/auth/tx";

// Service defines a gRPC service for interacting with transactions.
service Service {
  // EstimateFee simulates executing a transaction for estimating gas usage.
  rpc ComputeTax(ComputeTaxRequest) returns (ComputeTaxResponse) {
    option (google.api.http) = {
      post: "/terra/tx/v1beta1/compute_tax"
      body: "*"
    };
  }
}

// ComputeTaxRequest is the request type for the Service.ComputeTax
// RPC method.
message ComputeTaxRequest {
  // tx is the transaction to simulate.
  // Deprecated. Send raw tx bytes instead.
  cosmos.tx.v1beta1.Tx tx = 1 [deprecated = true];
  // tx_bytes is the raw transaction.
  bytes tx_bytes = 2;
}

// ComputeTaxResponse is the response type for the Service.ComputeTax
// RPC method.
message ComputeTaxResponse {
  // amount is the amount of coins to be paid as a fee
  repeated cosmos.base.v1beta1.Coin tax_amount = 1
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}
