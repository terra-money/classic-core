syntax = "proto3";
package terra.wasm.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "terra/wasm/v1beta1/wasm.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/terra-money/core/x/wasm/types";

// Query defines the gRPC querier service.
service Query {
  // CodeInfo returns the stored code info
  rpc CodeInfo(QueryCodeInfoRequest) returns (QueryCodeInfoResponse) {
    option (google.api.http).get = "/terra/wasm/v1beta1/codes/{code_id}";
  }

  // ByteCode returns the stored byte code
  rpc ByteCode(QueryByteCodeRequest) returns (QueryByteCodeResponse) {
    option (google.api.http).get = "/terra/wasm/v1beta1/codes/{code_id}/byte_code";
  }

  // ContractInfo returns the stored contract info
  rpc ContractInfo(QueryContractInfoRequest) returns (QueryContractInfoResponse) {
    option (google.api.http).get = "/terra/wasm/v1beta1/contracts/{contract_address}";
  }

  // ContractStore return smart query result from the contract
  rpc ContractStore(QueryContractStoreRequest) returns (QueryContractStoreResponse) {
    option (google.api.http).get = "/terra/wasm/v1beta1/contracts/{contract_address}/store";
  }

  // RawStore return single key from the raw store data of a contract
  rpc RawStore(QueryRawStoreRequest) returns (QueryRawStoreResponse) {
    option (google.api.http).get = "/terra/wasm/v1beta1/contracts/{contract_address}/store/raw";
  }

  // Params queries all parameters.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/terra/wasm/v1beta1/params";
  }
}

// QueryCodeInfoRequest is the request type for the QueryyCodeInfo RPC method.
message QueryCodeInfoRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;
  // grpc-gateway_out does not support Go style CodID
  uint64 code_id = 1;
}

// QueryCodeInfoResponse is response type for the
// QueryyCodeInfo RPC method.
message QueryCodeInfoResponse {
  CodeInfo code_info = 1 [(gogoproto.nullable) = false];
}

// QueryByteCodeRequest is the request type for the QueryyByteCode RPC method.
message QueryByteCodeRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // grpc-gateway_out does not support Go style CodID
  uint64 code_id = 1;
}

// QueryByteCodeResponse is response type for the
// QueryyByteCode RPC method.
message QueryByteCodeResponse {
  bytes byte_code = 1;
}

// QueryContractInfoRequest is the request type for the Query/ContractInfo RPC method.
message QueryContractInfoRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string contract_address = 1;
}

// QueryContractInfoResponse is response type for the
// Query/ContractInfo RPC method.
message QueryContractInfoResponse {
  ContractInfo contract_info = 1 [(gogoproto.nullable) = false];
}

// QueryContractStoreRequest is the request type for the Query/ContractStore RPC method.
message QueryContractStoreRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string contract_address = 1;
  bytes  query_msg        = 2 [(gogoproto.casttype) = "encoding/json.RawMessage"];
}

// QueryContractStoreResponse is response type for the
// Query/ContractStore RPC method.
message QueryContractStoreResponse {
  bytes query_result = 1 [(gogoproto.casttype) = "encoding/json.RawMessage"];
}

// QueryRawStoreRequest is the request type for the Query/RawStore RPC method.
message QueryRawStoreRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string contract_address = 1;
  bytes  key              = 2;
}

// QueryRawStoreResponse is response type for the
// Query/RawStore RPC method.
message QueryRawStoreResponse {
  // Data contains the raw store data
  bytes data = 1;
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [(gogoproto.nullable) = false];
}
