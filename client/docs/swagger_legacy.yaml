---
swagger: "2.0"
info:
  version: "3.0"
  title: "Terra-Lite for Terra"
  description: A REST interface for state queries, transaction generation and broadcasting.
tags:
  - name: Transactions
    description: Search, encode, or broadcast transactions.
  - name: Tendermint RPC
    description: Tendermint APIs, such as query blocks, transactions and validatorset
  - name: Auth
    description: Authenticate accounts
  - name: Bank
    description: Create and broadcast transactions
  - name: Staking
    description: Stake module APIs
  - name: Governance
    description: Governance module APIs
  - name: Slashing
    description: Slashing module APIs
  - name: Distribution
    description: Fee distribution module APIs
  - name: Mint
    description: Minting module APIs
  - name: Supply
    description: Supply module APIs
  - name: Market
    description: Market modules APIs
  - name: Oracle
    description: Get price and voting modules APIs
  - name: Treasury
    description: Treasury modules APIs
  - name: Wasm
    description: Wasm modules APIs
schemes:
  - https
host: lcd.terra.dev
securityDefinitions:
  kms:
    type: basic
paths:
  /node_info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      tags:
        - Terra REST
      produces:
        - application/json
      responses:
        200:
          description: Node status
          schema:
            type: object
            properties:
              application_version:
                properties:
                  build_tags:
                    type: string
                  client_name:
                    type: string
                  commit:
                    type: string
                  go:
                    type: string
                  name:
                    type: string
                  server_name:
                    type: string
                  version:
                    type: string
              node_info:
                properties:
                  id:
                    type: string
                  moniker:
                    type: string
                    example: validator-name
                  protocol_version:
                    properties:
                      p2p:
                        type: string
                        example: 7
                      block:
                        type: string
                        example: 10
                      app:
                        type: string
                        example: 0
                  network:
                    type: string
                    example: gaia-2
                  channels:
                    type: string
                  listen_addr:
                    type: string
                    example: 192.168.56.1:26656
                  version:
                    description: Tendermint version
                    type: string
                    example: 0.15.0
                  other:
                    description: more information on versions
                    type: object
                    properties:
                      tx_index:
                        type: string
                        example: on
                      rpc_address:
                        type: string
                        example: tcp://0.0.0.0:26657
        500:
          description: Failed to query node status
  /syncing:
    get:
      summary: Syncing state of node
      tags:
        - Tendermint RPC
      description: Get if the node is currently syning with other nodes
      produces:
        - application/json
      responses:
        200:
          description: Node syncing status
          schema:
            type: object
            properties:
              syncing:
                type: boolean
        500:
          description: Server internal error
  /blocks/latest:
    get:
      summary: Get the latest block
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        200:
          description: The latest block
          schema:
            $ref: "#/definitions/BlockQuery"
        500:
          description: Server internal error
  /blocks/{height}:
    get:
      summary: Get a block at a certain height
      tags:
        - Tendermint RPC
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        200:
          description: The block at a specific height
          schema:
            $ref: "#/definitions/BlockQuery"
        404:
          description: Request block height doesn't
        400:
          description: Invalid height
        500:
          description: Server internal error
  /validatorsets/latest:
    get:
      summary: Get the latest validator set
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        200:
          description: The validator set at the latest block height
          schema:
            type: object
            properties:
              block_height:
                type: string
              validators:
                type: array
                items:
                  $ref: "#/definitions/TendermintValidator"
        500:
          description: Server internal error
  /validatorsets/{height}:
    get:
      summary: Get a validator set a certain height
      tags:
        - Tendermint RPC
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        200:
          description: The validator set at a specific block height
          schema:
            type: object
            properties:
              block_height:
                type: string
              validators:
                type: array
                items:
                  $ref: "#/definitions/TendermintValidator"
        404:
          description: Block at height not available
        400:
          description: Invalid height
        500:
          description: Server internal error
  /txs/{hash}:
    get:
      deprecated: true
      summary: Get a Tx by hash
      tags:
        - Transactions
      description: Retrieve a transaction using its hash.
      produces:
        - application/json
      parameters:
        - in: path
          name: hash
          description: Tx hash
          required: true
          type: string
          x-example: BCBE20E8D46758B96AE5883B792858296AC06E51435490FBDCAE25A72B3CC76B
      responses:
        200:
          description: Tx with the provided hash
          schema:
            $ref: "#/definitions/TxQuery"
        500:
          description: Internal Server Error
  /txs:
    get:
      deprecated: true
      tags:
        - Transactions
      summary: Search transactions
      description: Search transactions by events.
      produces:
        - application/json
      parameters:
        - in: query
          name: message.action
          type: string
          description: "transaction events such as 'message.action=send' which results in the following endpoint: 'GET /txs?message.action=send'. note that each module documents its own events. look for xx_events.md in the corresponding cosmos-sdk/docs/spec directory"
          x-example: "send"
        - in: query
          name: message.sender
          type: string
          description: "transaction events with sender: 'GET /txs?message.action=send&message.sender=terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv'"
          x-example: "terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv"
        - in: query
          name: page
          description: Page number
          type: integer
          x-example: 1
        - in: query
          name: limit
          description: Maximum number of items per page
          type: integer
          x-example: 1
        - in: query
          name: tx.minheight
          type: integer
          description: "transactions on blocks with height greater or equal this value"
          x-example: 25
        - in: query
          name: tx.maxheight
          type: integer
          description: "transactions on blocks with height less than or equal this value"
          x-example: 800000
      responses:
        200:
          description: All txs matching the provided events
          schema:
            $ref: "#/definitions/PaginatedQueryTxs"
        400:
          description: Invalid search events
        500:
          description: Internal Server Error
    post:
      deprecated: true
      tags:
        - Transactions
      summary: Broadcast a signed tx
      description: Broadcast a signed tx to a full node
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: txBroadcast
          description: The tx must be a signed StdTx. The supported broadcast modes include `"block"`(return after tx commit), `"sync"`(return afer CheckTx) and `"async"`(return right away).
          required: true
          schema:
            type: object
            properties:
              tx:
                required: true
                $ref: "#/definitions/StdTx"
              mode:
                required: true
                type: string
                example: block
              sequences:
                required: false
                type: array
                items:
                  type: string
                  example: "1"
              fee_granter:
                required: false
                $ref: "#/definitions/Address"
      responses:
        200:
          description: Tx broadcasting result
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        500:
          description: Internal Server Error
  /txs/encode:
    post:
      deprecated: true
      tags:
        - Transactions
      summary: Encode a legacy transaction to the Proto wire format
      description: Encode a legacy transaction (signed or not) from JSON to base64-encoded Proto serialized bytes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tx
          description: The tx to encode
          required: true
          schema:
            type: object
            properties:
              tx:
                $ref: "#/definitions/StdTx"
              sequences:
                required: false
                type: array
                items:
                  type: string
                  example: "1"
              fee_granter:
                required: false
                $ref: "#/definitions/Address"
      responses:
        200:
          description: The tx was successfully decoded and re-encoded
          schema:
            type: object
            properties:
              tx:
                type: string
                example: The base64-encoded Proto-serialized bytes for the tx
        400:
          description: The tx was malformed
        500:
          description: Server internal error
  /txs/decode:
    post:
      deprecated: true
      tags:
        - Transactions
      summary: Decode a transaction from the Amino wire format
      description: Decode a transaction (signed or not) from base64-encoded Amino serialized bytes to JSON
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tx
          description: The tx to decode
          required: true
          schema:
            type: object
            properties:
              tx:
                type: string
                example: SvBiXe4KPqijYZoKFFHEzJ8c2HPAfv2EFUcIhx0yPagwEhTy0vPA+GGhCEslKXa4Af0uB+mfShoMCgVzdGFrZRIDMTAwEgQQwJoM
      responses:
        200:
          description: The tx was successfully decoded
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: The tx was malformed
        500:
          description: Server internal error
  /txs/estimate_fee:
    post:
      deprecated: true
      tags:
        - Transactions
      summary: Estimate fee and gas of a transaction
      description: Estimate fee and gas of a transaction according to given parameters
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: transaction
          description: The sender and tx information
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              msgs:
                type: array
                items:
                  $ref: "#/definitions/Msg"
      responses:
        200:
          description: The fee was successfully estimated
          schema:
            type: object
            properties:
              gas:
                type: string
              amount:
                type: array
                items:
                  $ref: "#/definitions/Coin"
        400:
          description: The tx was malformed
        500:
          description: Server internal error
  /bank/balances/{address}:
    get:
      deprecated: true
      summary: Get the account balances
      tags:
        - Bank
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
          x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: Account balances
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        500:
          description: Server internal error
  /bank/accounts/{address}/transfers:
    post:
      deprecated: true
      summary: Send coins from one account to another
      tags:
        - Bank
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
          x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        - in: body
          name: account
          description: The sender and tx information
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              coins:
                type: array
                items:
                  $ref: "#/definitions/Coin"
      responses:
        202:
          description: Tx was successfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /bank/total:
    get:
      deprecated: true
      summary: Total supply of coins in the chain
      tags:
        - Bank
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Supply"
        500:
          description: Internal Server Error
  /bank/total/{denomination}:
    parameters:
      - in: path
        name: denomination
        description: Coin denomination
        required: true
        type: string
        x-example: uluna
    get:
      deprecated: true
      summary: Total supply of a single coin denomination
      tags:
        - Bank
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: string
        400:
          description: Invalid coin denomination
        500:
          description: Internal Server Error
  /auth/accounts/{address}:
    get:
      deprecated: true
      summary: Get the account information on blockchain
      tags:
        - Auth
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address
          required: true
          type: string
          x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: Account information on the blockchain
          schema:
            type: object
            properties:
              Account:
                $ref: "#/definitions/Account"
              LazyGradedVestingAccount:
                $ref: "#/definitions/LazyGradedVestingAccount"
        500:
          description: Server internal error
  /staking/delegators/{delegatorAddr}/delegations:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    get:
      deprecated: true
      summary: Get all delegations from a delegator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Delegation"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      deprecated: true
      summary: Submit delegation
      parameters:
        - in: body
          name: delegation
          description: Delegate an amount of liquid coins to a validator
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              delegator_address:
                $ref: "#/definitions/Address"
              validator_address:
                $ref: "#/definitions/ValidatorAddress"
              amount:
                $ref: "#/definitions/Coin"
      tags:
        - Staking
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid delegator address or delegation request body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/delegations/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      deprecated: true
      summary: Query the current delegation between a delegator and a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Delegation"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/unbonding_delegations:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    get:
      deprecated: true
      summary: Get all unbonding delegations from a delegator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UnbondingDelegation"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      deprecated: true
      summary: Submit an unbonding delegation
      parameters:
        - in: body
          name: delegation
          description: Unbond an amount of bonded shares from a validator
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              delegator_address:
                $ref: "#/definitions/Address"
              validator_address:
                $ref: "#/definitions/ValidatorAddress"
              amount:
                $ref: "#/definitions/Coin"
      tags:
        - Staking
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid delegator address or unbonding delegation request body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      deprecated: true
      summary: Query all unbonding delegations between a delegator and a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UnbondingDelegation"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /staking/redelegations:
    parameters:
      - in: query
        name: delegator
        description: Bech32 AccAddress of Delegator
        required: false
        type: string
      - in: query
        name: validator_from
        description: Bech32 ValAddress of SrcValidator
        required: false
        type: string
      - in: query
        name: validator_to
        description: Bech32 ValAddress of DstValidator
        required: false
        type: string
    get:
      deprecated: true
      summary: Get all redelegations (filter by query params)
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Redelegation"
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/redelegations:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    post:
      deprecated: true
      summary: Submit a redelegation
      parameters:
        - in: body
          name: delegation
          description: The sender and tx information
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              delegator_address:
                $ref: "#/definitions/Address"
              validator_src_address:
                $ref: "#/definitions/ValidatorAddress"
              validator_dst_address:
                $ref: "#/definitions/ValidatorAddress"
              amount:
                type: array
                items:
                  $ref: "#/definitions/Coin"
      tags:
        - Staking
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Tx was successfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid delegator address or redelegation request body
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/validators:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    get:
      deprecated: true
      summary: Query all validators that a delegator is bonded to
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Validator"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/validators/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      - in: path
        name: validatorAddr
        description: Bech32 ValAddress of Delegator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      deprecated: true
      summary: Query a validator that a delegator is bonded to
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Validator"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /staking/validators:
    get:
      deprecated: true
      summary: Get all validator candidates. By default it returns only the bonded validators.
      parameters:
        - in: query
          name: status
          type: string
          description: The validator bond status. Must be either 'bonded', 'unbonded', or 'unbonding'.
          x-example: bonded
        - in: query
          name: page
          description: The page number.
          type: integer
          x-example: 1
        - in: query
          name: limit
          description: The maximum number of items per page.
          type: integer
          x-example: 1
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Validator"
        500:
          description: Internal Server Error
  /staking/validators/{validatorAddr}:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      deprecated: true
      summary: Query the information from a single validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Validator"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /staking/validators/{validatorAddr}/delegations:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      deprecated: true
      summary: Get all delegations from a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Delegation"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /staking/validators/{validatorAddr}/unbonding_delegations:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      deprecated: true
      summary: Get all unbonding delegations from a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UnbondingDelegation"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /staking/pool:
    get:
      deprecated: true
      summary: Get the current state of the staking pool
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              bonded_tokens:
                type: string
              not_bonded_tokens:
                type: string
        500:
          description: Internal Server Error
  /staking/parameters:
    get:
      deprecated: true
      summary: Get the current staking parameter values
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              unbonding_time:
                type: string
              max_validators:
                type: integer
              max_entries:
                type: integer
              historical_entries:
                type: integer
              bond_denom:
                type: string
        500:
          description: Internal Server Error
  /slashing/signing_infos:
    get:
      deprecated: true
      summary: Get sign info of given all validators
      description: Get sign info of all validators
      produces:
        - application/json
      tags:
        - Slashing
      parameters:
        - in: query
          name: page
          description: Page number
          type: integer
          required: true
          x-example: 1
        - in: query
          name: limit
          description: Maximum number of items per page
          type: integer
          required: true
          x-example: 5
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SigningInfo"
        400:
          description: Invalid validator public key for one of the validators
        500:
          description: Internal Server Error
  /slashing/validators/{validatorAddr}/unjail:
    post:
      deprecated: true
      summary: Unjail a jailed validator
      description: Send transaction to unjail a jailed validator
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Slashing
      parameters:
        - type: string
          description: Bech32 validator address
          name: validatorAddr
          required: true
          in: path
          x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
        - description: ""
          name: UnjailBody
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/StdTx"
      responses:
        200:
          description: Tx was successfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid validator address or base_req
        500:
          description: Internal Server Error
  /slashing/parameters:
    get:
      deprecated: true
      summary: Get the current slashing parameters
      tags:
        - Slashing
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              signed_blocks_window:
                type: string
              min_signed_per_window:
                type: string
              downtime_jail_duration:
                type: string
              slash_fraction_double_sign:
                type: string
              slash_fraction_downtime:
                type: string
        500:
          description: Internal Server Error
  /gov/proposals:
    post:
      deprecated: true
      summary: Submit a proposal
      description: Send transaction to submit a proposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - description: valid value of `"proposal_type"` can be `"text"`, `"parameter_change"`, `"software_upgrade"`
          name: post_proposal_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              title:
                type: string
              description:
                type: string
              proposal_type:
                type: string
                example: "text"
              proposer:
                $ref: "#/definitions/Address"
              initial_deposit:
                type: array
                items:
                  $ref: "#/definitions/Coin"
      responses:
        200:
          description: Tx was successfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid proposal body
        500:
          description: Internal Server Error
    get:
      deprecated: true
      summary: Query proposals
      description: Query proposals information with parameters
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - in: query
          name: voter
          description: voter address
          required: false
          type: string
        - in: query
          name: depositor
          description: depositor address
          required: false
          type: string
        - in: query
          name: status
          description: proposal status, valid values can be `"deposit_period"`, `"voting_period"`, `"passed"`, `"rejected"`
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/TextProposal"
        400:
          description: Invalid query parameters
        500:
          description: Internal Server Error
  /gov/proposals/param_change:
    post:
      deprecated: true
      summary: Generate a parameter change proposal transaction
      description: Generate a parameter change proposal transaction
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - description: The parameter change proposal body that contains all parameter changes
          name: post_proposal_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              title:
                type: string
                x-example: "Param Change"
              description:
                type: string
                x-example: "Update max validators"
              proposer:
                $ref: "#/definitions/Address"
              deposit:
                type: array
                items:
                  $ref: "#/definitions/Coin"
              changes:
                type: array
                items:
                  $ref: "#/definitions/ParamChange"
      responses:
        200:
          description: The transaction was successfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid proposal body
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}:
    get:
      deprecated: true
      summary: Query a proposal
      description: Query a proposal by id
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TextProposal"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/proposer:
    get:
      deprecated: true
      summary: Query proposer
      description: Query for the proposer for a proposal
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Proposer"
        400:
          description: Invalid proposal ID
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/deposits:
    get:
      deprecated: true
      summary: Query deposits
      description: Query deposits by proposalId
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Deposit"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
    post:
      deprecated: true
      summary: Deposit tokens to a proposal
      description: Send transaction to deposit tokens to a proposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - description: ""
          name: post_deposit_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              depositor:
                $ref: "#/definitions/Address"
              amount:
                type: array
                items:
                  $ref: "#/definitions/Coin"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid proposal id or deposit body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/deposits/{depositor}:
    get:
      deprecated: true
      summary: Query deposit
      description: Query deposit by proposalId and depositor address
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - type: string
          description: Bech32 depositor address
          name: depositor
          required: true
          in: path
          x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Deposit"
        400:
          description: Invalid proposal id or depositor address
        404:
          description: Found no deposit
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/votes:
    get:
      deprecated: true
      summary: Query voters
      description: Query voters information by proposalId
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Vote"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
    post:
      deprecated: true
      summary: Vote a proposal
      description: Send transaction to vote a proposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - description: valid value of `"option"` field can be `"yes"`, `"no"`, `"no_with_veto"` and `"abstain"`
          name: post_vote_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              voter:
                $ref: "#/definitions/Address"
              option:
                type: string
                example: "yes"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid proposal id or vote body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/votes/{voter}:
    get:
      deprecated: true
      summary: Query vote
      description: Query vote information by proposal Id and voter address
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - type: string
          description: Bech32 voter address
          name: voter
          required: true
          in: path
          x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Vote"
        400:
          description: Invalid proposal id or voter address
        404:
          description: Found no vote
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/tally:
    get:
      deprecated: true
      summary: Get a proposal's tally result at the current time
      description: Gets a proposal's tally result at the current time. If the proposal is pending deposits (i.e status 'DepositPeriod') it returns an empty tally result.
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TallyResult"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
  /gov/parameters/deposit:
    get:
      deprecated: true
      summary: Query governance deposit parameters
      description: Query governance deposit parameters. The max_deposit_period units are in nanoseconds.
      produces:
        - application/json
      tags:
        - Governance
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              min_deposit:
                type: array
                items:
                  $ref: "#/definitions/Coin"
              max_deposit_period:
                type: string
                example: "86400000000000"
        400:
          description: <other_path> is not a valid query request path
        404:
          description: Found no deposit parameters
        500:
          description: Internal Server Error
  /gov/parameters/tallying:
    get:
      deprecated: true
      summary: Query governance tally parameters
      description: Query governance tally parameters
      produces:
        - application/json
      tags:
        - Governance
      responses:
        200:
          description: OK
          schema:
            properties:
              threshold:
                type: string
                example: "0.5000000000"
              quorum:
                type: string
                example: "0.3340000000"
              veto_threshold:
                type: string
                example: "0.3340000000"
        400:
          description: <other_path> is not a valid query request path
        404:
          description: Found no tally parameters
        500:
          description: Internal Server Error
  /gov/parameters/voting:
    get:
      deprecated: true
      summary: Query governance voting parameters
      description: Query governance voting parameters. The voting_period units are in nanoseconds.
      produces:
        - application/json
      tags:
        - Governance
      responses:
        200:
          description: OK
          schema:
            properties:
              voting_period:
                type: string
                example: "86400000000000"
        400:
          description: <other_path> is not a valid query request path
        404:
          description: Found no voting parameters
        500:
          description: Internal Server Error
  /distribution/delegators/{delegatorAddr}/rewards:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    get:
      deprecated: true
      summary: Get the total rewards balance from all delegations
      description: Get the sum of all the rewards earned by delegations by a single delegator
      produces:
        - application/json
      tags:
        - Distribution
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/DelegatorTotalRewards"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      deprecated: true
      summary: Withdraw all the delegator's delegation rewards
      description: Withdraw all the delegator's delegation rewards
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid delegator address
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      deprecated: true
      summary: Query a delegation reward
      description: Query a single delegation reward by a delegator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      deprecated: true
      summary: Withdraw a delegation reward
      description: Withdraw a delegator's delegation reward from a single validator
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid delegator address or delegation body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /distribution/delegators/{delegatorAddr}/withdraw_address:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    get:
      deprecated: true
      summary: Get the rewards withdrawal address
      description: Get the delegations' rewards withdrawal address. This is the address in which the user will receive the reward funds
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Address"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      deprecated: true
      summary: Replace the rewards withdrawal address
      description: Replace the delegations' rewards withdrawal address for a new one.
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              withdraw_address:
                $ref: "#/definitions/Address"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid delegator or withdraw address
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /distribution/validators/{validatorAddr}:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      deprecated: true
      summary: Validator distribution information
      description: Query the distribution information of a single validator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ValidatorDistInfo"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /distribution/validators/{validatorAddr}/outstanding_rewards:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      deprecated: true
      summary: Fee distribution outstanding rewards of a single validator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  $ref: "#/definitions/Coin"
        500:
          description: Internal Server Error
  /distribution/validators/{validatorAddr}/rewards:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      deprecated: true
      summary: Commission and self-delegation rewards of a single validator
      description: Query the commission and self-delegation rewards of validator.
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
    post:
      deprecated: true
      summary: Withdraw the validator's rewards
      description: Withdraw the validator's self-delegation and commissions rewards
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid validator address
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /distribution/community_pool:
    get:
      deprecated: true
      summary: Community pool parameters
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        500:
          description: Internal Server Error
  /distribution/parameters:
    get:
      deprecated: true
      summary: Fee distribution parameters
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            properties:
              base_proposer_reward:
                type: string
              bonus_proposer_reward:
                type: string
              community_tax:
                type: string
        500:
          description: Internal Server Error
  /minting/parameters:
    get:
      deprecated: true
      summary: Minting module parameters
      tags:
        - Mint
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            properties:
              mint_denom:
                type: string
              inflation_rate_change:
                type: string
              inflation_max:
                type: string
              inflation_min:
                type: string
              goal_bonded:
                type: string
              blocks_per_year:
                type: string
        500:
          description: Internal Server Error
  /minting/inflation:
    get:
      deprecated: true
      summary: Current minting inflation value
      tags:
        - Mint
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: string
        500:
          description: Internal Server Error
  /minting/annual-provisions:
    get:
      deprecated: true
      summary: Current minting annual provisions value
      tags:
        - Mint
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: string
        500:
          description: Internal Server Error
  /market/swap:
    post:
      deprecated: true
      summary: Swap coin with another coin
      tags:
        - Market
      produces:
        - application/json
      parameters:
        - in: body
          name: Swap coin request body
          schema:
            $ref: "#/definitions/SwapReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        500:
          description: Internal Server Error
    get:
      deprecated: true
      summary: Query swap result amount
      tags:
        - Market
      produces:
        - application/json
      parameters:
        - in: query
          name: offer_coin
          description: coin expression want to swap
          type: string
          required: true
          x-example: 1000000uluna
        - in: query
          name: ask_denom
          description: Then coin denom want to ask
          type: string
          required: true
          x-example: usdr
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Coin"
        500:
          description: Internal Server Error
  /market/terra_pool_delta:
    get:
      deprecated: true
      summary: Get terra pool delta, is usdr amount used for swap operation from the TerraPool.
      tags:
        - Market
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: number
            format: float
            example: "10000000.00"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /market/parameters:
    get:
      deprecated: true
      summary: Get market params
      tags:
        - Market
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/MarketParams"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/denoms/{denom}/exchange_rate:
    get:
      deprecated: true
      summary: Get the current effective exchange rate in Luna for the asset
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: The coin denom to get
          required: true
          type: string
      responses:
        200:
          description: current exchange rate of denom i.e. "1000.0"
          schema:
            type: number
            example: "1872.000000000000000000"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/denoms/exchange_rates:
    get:
      deprecated: true
      summary: Get all activated exchange rates
      tags:
        - Oracle
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/DecCoin"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/denoms/actives:
    get:
      deprecated: true
      summary: Get all activated denoms
      tags:
        - Oracle
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
            example: ["ukrw", "usdr"]
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/voters/{validator}/feeder:
    post:
      deprecated: true
      summary: Generate oracle feeder right delegation message
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: validator
          description: Feeder right delegator
          required: true
          type: string
        - in: body
          name: feeder right delegation request body
          schema:
            $ref: "#/definitions/DelegateReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Bad request
        500:
          description: Internal Server Error
    get:
      deprecated: true
      summary: Get delegated oracle feeder of a validator
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: validator
          description: Feeder right delegator
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Address"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/voters/{validator}/miss:
    get:
      deprecated: true
      summary: Get the number of vote periods missed in this oracle slash window.
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: validator
          description: oracle operator
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: number
            format: integer
            example: "100"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/voters/{validator}/aggregate_prevote:
    post:
      deprecated: true
      summary: Generate oracle aggregate exchange rate prevote message containing a hash
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: validator
          description: oracle operator
          required: true
          type: string
        - in: body
          name: Aggregate Prevote request body
          schema:
            $ref: "#/definitions/AggregatePrevoteReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Bad request
        500:
          description: Internal Server Error
    get:
      deprecated: true
      summary: Get the currently outstanding aggregate exchange rate oracle prevote of a validator
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: validator
          description: oracle operator
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/AggregateExchangeRatePrevote"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/voters/{validator}/aggregate_vote:
    post:
      deprecated: true
      summary: Generate oracle aggregate exchange rate vote message containing exchange rates and salt to prove the aggregate prevote
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: validator
          description: oracle operator
          required: true
          type: string
        - in: body
          name: Aggregate Vote request body
          schema:
            $ref: "#/definitions/AggregateVoteReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Bad request
        500:
          description: Internal Server Error
    get:
      deprecated: true
      summary: Get the currently outstanding aggregate exchange rate oracle vote of a validator
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: validator
          description: oracle operator
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/AggregateExchangeRateVote"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/parameters:
    get:
      deprecated: true
      summary: Get oracle params
      tags:
        - Oracle
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/OracleParams"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /treasury/tax_rate:
    get:
      deprecated: true
      summary: Get current tax rate
      tags:
        - Treasury
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: number
            format: float
            example: "0.05"
        500:
          description: Internal Server Error
  /treasury/tax_cap/{denom}:
    get:
      deprecated: true
      summary: Get tax cap of the denom
      tags:
        - Treasury
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: Denom
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: integer
            example: "100000"
        404:
          description: Not Found
  /treasury/tax_caps:
    get:
      deprecated: true
      summary: Get tax caps for the all whitelisted denoms
      tags:
        - Treasury
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/TaxCap"
        404:
          description: Not Found
  /treasury/reward_weight:
    get:
      deprecated: true
      summary: Get current reward weight
      tags:
        - Treasury
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: number
            format: float
            example: "0.05"
            description: 5%
        500:
          description: Internal Server Error
  /treasury/tax_proceeds:
    get:
      deprecated: true
      summary: Get current tax proceeds
      tags:
        - Treasury
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        500:
          description: Internal Server Error
  /treasury/seigniorage_proceeds:
    get:
      deprecated: true
      summary: retrieves the size of the seigniorage pool
      tags:
        - Treasury
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: integer
            example: "0"
        500:
          description: Internal Server
  /treasury/parameters:
    get:
      deprecated: true
      summary: Get treasury module params
      tags:
        - Treasury
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TreasuryParams"
        404:
          description: Not Found
  /treasury/indicators:
    get:
      deprecated: true
      summary: Get the current treasury indicators
      tags:
        - Treasury
      produces:
        - application/json
      responses:
        200:
          description: Ok
          schema:
            properties:
              trl_year:
                type: string
                description: "Tax Rewards per staked Luna over a year of rolling average"
                example: "0.000407428004800011"
              trl_month:
                type: string
                description: "Tax Rewards per staked Luna over a month of rolling average"
                example: "0.000366833881714302"
  /wasm/codes:
    post:
      deprecated: true
      summary: Generate wasm store code message
      tags:
        - Wasm
      produces:
        - application/json
      parameters:
        - in: body
          name: store code request body
          schema:
            $ref: "#/definitions/StoreCodeReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Bad request
        500:
          description: Internal Server Error
  /wasm/codes/{codeID}:
    post:
      deprecated: true
      summary: Instantiate wasm contract
      tags:
        - Wasm
      produces:
        - application/json
      parameters:
        - in: path
          name: codeID
          description: code ID you want to instantiate
          required: true
          type: number
        - in: body
          name: instantiate contract request body
          schema:
            $ref: "#/definitions/InstantiateContractReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Bad request
        500:
          description: Internal Server Error
    get:
      deprecated: true
      summary: Get code info of the code ID
      tags:
        - Wasm
      produces:
        - application/json
      parameters:
        - in: path
          name: codeID
          description: code ID you want to instantiate
          required: true
          type: number
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CodeInfo"
  /wasm/codes/{codeID}/migrate:
    post:
      deprecated: true
      summary: Migrate old wasm code to new wasm code
      tags:
        - Wasm
      produces:
        - application/json
      parameters:
        - in: path
          name: codeID
          description: code ID you want to migrate
          required: true
          type: number
        - in: body
          name: migrate contract request body
          schema:
            $ref: "#/definitions/MigrateCodeReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Bad request
        500:
          description: Internal Server Error
  /wasm/contracts/{contractAddress}:
    post:
      deprecated: true
      summary: Execute wasm contract message
      tags:
        - Wasm
      produces:
        - application/json
      parameters:
        - in: path
          name: contractAddress
          description: contract address you want to execute
          required: true
          type: string
        - in: body
          name: execute contract request body
          schema:
            $ref: "#/definitions/ExecuteContractReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Bad request
        500:
          description: Internal Server Error
    get:
      deprecated: true
      summary: Get contract info of the contract Address
      tags:
        - Wasm
      produces:
        - application/json
      parameters:
        - in: path
          name: contractAddress
          description: contract address you want to execute
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ContractInfo"
  /wasm/contracts/{contractAddress}/migrate:
    post:
      deprecated: true
      summary: Migrate wasm contract to new code base
      tags:
        - Wasm
      produces:
        - application/json
      parameters:
        - in: path
          name: contractAddress
          description: contract address you want to migrate
          required: true
          type: string
        - in: body
          name: migrate contract request body
          schema:
            $ref: "#/definitions/MigrateContractReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Bad request
        500:
          description: Internal Server Error
  /wasm/contracts/{contractAddress}/admin/update:
    post:
      deprecated: true
      summary: Update wasm contract admin to new address
      tags:
        - Wasm
      produces:
        - application/json
      parameters:
        - in: path
          name: contractAddress
          description: contract address you want to update admin
          required: true
          type: string
        - in: body
          name: update contract admin request body
          schema:
            $ref: "#/definitions/UpdateContractAdminReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Bad request
        500:
          description: Internal Server Error
  /wasm/contracts/{contractAddress}/admin/clear:
    post:
      deprecated: true
      summary: Clear wasm contract admin to make the contract un-migratable
      tags:
        - Wasm
      produces:
        - application/json
      parameters:
        - in: path
          name: contractAddress
          description: contract address you want to clear admin
          required: true
          type: string
        - in: body
          name: clear contract admin request body
          schema:
            $ref: "#/definitions/ClearContractAdminReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Bad request
        500:
          description: Internal Server Error
  /wasm/contracts/{contractAddress}/store:
    get:
      deprecated: true
      summary: Get stored information with query msg
      tags:
        - Wasm
      parameters:
        - in: path
          name: contractAddress
          description: contract address you want to lookup
          required: true
          type: string
        - in: query
          name: query_msg
          description: json formatted query msg
          required: true
          type: string
          x-example: "{}"
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: string
  /wasm/contracts/{contractAddress}/store/raw:
    get:
      deprecated: true
      summary: Get stored information with store key
      tags:
        - Wasm
      parameters:
        - in: path
          name: contractAddress
          description: contract address you want to lookup
          required: true
          type: string
        - in: query
          name: key
          description: base64 encoded raw key to access
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: string
  /wasm/parameters:
    get:
      deprecated: true
      summary: Get wasm module params
      tags:
        - Wasm
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/WasmParams"
        404:
          description: Not Found
definitions:
  CheckTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          $ref: "#/definitions/KVPair"
    example:
      code: 0
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ""
        - ""
  DeliverTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          $ref: "#/definitions/KVPair"
    example:
      code: 5
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ""
        - ""
  BroadcastTxCommitResult:
    type: object
    properties:
      check_tx:
        $ref: "#/definitions/CheckTxResult"
      deliver_tx:
        $ref: "#/definitions/DeliverTxResult"
      hash:
        $ref: "#/definitions/Hash"
      height:
        type: integer
  KVPair:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Msg:
    type: string
  Address:
    type: string
    description: bech32 encoded address
    example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
  ValidatorAddress:
    type: string
    description: bech32 encoded address
    example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
  Coin:
    type: object
    properties:
      denom:
        type: string
        example: uluna
      amount:
        type: string
        example: "50"
  DecCoin:
    type: object
    properties:
      denom:
        type: string
        example: ukrw
      amount:
        type: string
        example: "50.000"
  Hash:
    type: string
    example: EE5F3404034C524501629B56E0DDC38FAD651F04
  TxQuery:
    type: object
    properties:
      hash:
        type: string
        example: "D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656"
      height:
        type: number
        example: 368
      tx:
        $ref: "#/definitions/StdTx"
      result:
        type: object
        properties:
          log:
            type: string
          gas_wanted:
            type: string
            example: "200000"
          gas_used:
            type: string
            example: "26354"
          tags:
            type: array
            items:
              $ref: "#/definitions/KVPair"
  PaginatedQueryTxs:
    type: object
    properties:
      total_count:
        type: number
        example: 1
      count:
        type: number
        example: 1
      page_number:
        type: number
        example: 1
      page_total:
        type: number
        example: 1
      limit:
        type: number
        example: 30
      txs:
        type: array
        items:
          $ref: "#/definitions/TxQuery"
  StdTx:
    type: object
    properties:
      msg:
        type: array
        items:
          $ref: "#/definitions/Msg"
      fee:
        type: object
        properties:
          gas:
            type: string
          amount:
            type: array
            items:
              $ref: "#/definitions/Coin"
      memo:
        type: string
      signature:
        type: object
        properties:
          signature:
            type: string
            example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
          pub_key:
            type: object
            properties:
              type:
                type: string
                example: "tendermint/PubKeySecp256k1"
              value:
                type: string
                example: "Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH"
          account_number:
            type: string
            example: "0"
          sequence:
            type: string
            example: "0"
  BlockID:
    type: object
    properties:
      hash:
        $ref: "#/definitions/Hash"
      parts:
        type: object
        properties:
          total:
            type: number
            example: 0
          hash:
            $ref: "#/definitions/Hash"
  BlockHeader:
    type: object
    properties:
      chain_id:
        type: string
        example: columbus-5
      height:
        type: number
        example: 1
      time:
        type: string
        example: "2017-12-30T05:53:09.287+01:00"
      num_txs:
        type: number
        example: 0
      last_block_id:
        $ref: "#/definitions/BlockID"
      total_txs:
        type: number
        example: 35
      last_commit_hash:
        $ref: "#/definitions/Hash"
      data_hash:
        $ref: "#/definitions/Hash"
      validators_hash:
        $ref: "#/definitions/Hash"
      next_validators_hash:
        $ref: "#/definitions/Hash"
      consensus_hash:
        $ref: "#/definitions/Hash"
      app_hash:
        $ref: "#/definitions/Hash"
      last_results_hash:
        $ref: "#/definitions/Hash"
      evidence_hash:
        $ref: "#/definitions/Hash"
      proposer_address:
        $ref: "#/definitions/Address"
      version:
        type: object
        properties:
          block:
            type: string
            example: 10
          app:
            type: string
            example: 0
  Block:
    type: object
    properties:
      header:
        $ref: "#/definitions/BlockHeader"
      txs:
        type: array
        items:
          type: string
      evidence:
        type: array
        items:
          type: string
      last_commit:
        type: object
        properties:
          block_id:
            $ref: "#/definitions/BlockID"
          precommits:
            type: array
            items:
              type: object
              properties:
                validator_address:
                  type: string
                validator_index:
                  type: string
                  example: "0"
                height:
                  type: string
                  example: "0"
                round:
                  type: string
                  example: "0"
                timestamp:
                  type: string
                  example: "2017-12-30T05:53:09.287+01:00"
                type:
                  type: number
                  example: 2
                block_id:
                  $ref: "#/definitions/BlockID"
                signature:
                  type: string
                  example: "7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ=="
  BlockQuery:
    type: object
    properties:
      block_meta:
        type: object
        properties:
          header:
            $ref: "#/definitions/BlockHeader"
          block_id:
            $ref: "#/definitions/BlockID"
      block:
        $ref: "#/definitions/Block"
  DelegationDelegatorReward:
    type: object
    properties:
      validator_address:
        $ref: "#/definitions/ValidatorAddress"
      reward:
        type: array
        items:
          $ref: "#/definitions/Coin"
  DelegatorTotalRewards:
    type: object
    properties:
      rewards:
        type: array
        items:
          $ref: "#/definitions/DelegationDelegatorReward"
      total:
        type: array
        items:
          $ref: "#/definitions/Coin"
  BaseReq:
    type: object
    properties:
      from:
        type: string
        example: "terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv"
        description: Sender address or Keybase name to generate a transaction
      memo:
        type: string
        example: "Sent via Terra Station 🚀"
      chain_id:
        type: string
        example: "Columbus-5"
      account_number:
        type: string
        example: "0"
      sequence:
        type: string
        example: "1"
      gas:
        type: string
        example: "200000"
      gas_adjustment:
        type: string
        example: "1.2"
      fees:
        type: array
        items:
          $ref: "#/definitions/Coin"
      simulate:
        type: boolean
        example: false
        description: Estimate gas for a transaction (cannot be used in conjunction with generate_only)
  TendermintValidator:
    type: object
    properties:
      address:
        $ref: "#/definitions/ValidatorAddress"
      pub_key:
        $ref: "#/definitions/PublicKey"
      voting_power:
        type: string
        example: "1000"
      proposer_priority:
        type: string
        example: "1000"
  TextProposal:
    type: object
    properties:
      id:
        type: string
        example: "1"
      content:
        type: object
        properties:
          type: 
            type: string
            example: "gov/TextProposal"
          value:
            type: object
            properties:
              title: 
                type: string
              description:
                type: string
      status:
        type: number
      final_tally_result:
        $ref: "#/definitions/TallyResult"
      total_deposit:
        type: array
        items:
          $ref: "#/definitions/Coin"
      submit_time:
        type: string
      deposit_end_time:
        type: string
      voting_start_time:
        type: string
      voting_end_time:
        type: string
  Proposer:
    type: object
    properties:
      proposal_id:
        type: string
      proposer:
        type: string
  Deposit:
    type: object
    properties:
      amount:
        type: array
        items:
          $ref: "#/definitions/Coin"
      proposal_id:
        type: string
      depositor:
        $ref: "#/definitions/Address"
  TallyResult:
    type: object
    properties:
      yes:
        type: string
        example: "0.0000000000"
      abstain:
        type: string
        example: "0.0000000000"
      no:
        type: string
        example: "0.0000000000"
      no_with_veto:
        type: string
        example: "0.0000000000"
  Vote:
    type: object
    properties:
      voter:
        type: string
      proposal_id:
        type: string
      options:
        type: array
        items:
          type: object
          properties:
            option:
              type: string
              enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              default: VOTE_OPTION_UNSPECIFIED
              description: >-
                VoteOption enumerates the valid vote options for a given governance
                proposal.

                - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
            weight:
              type: string
  Validator:
    type: object
    properties:
      operator_address:
        $ref: "#/definitions/ValidatorAddress"
      consensus_pubkey:
        $ref: "#/definitions/PublicKey"
      jailed:
        type: boolean
      status:
        type: integer
      tokens:
        type: string
      delegator_shares:
        type: string
      description:
        type: object
        properties:
          moniker:
            type: string
          identity:
            type: string
          website:
            type: string
          security_contact:
            type: string
          details:
            type: string
      bond_height:
        type: string
        example: "0"
      bond_intra_tx_counter:
        type: integer
        example: 0
      unbonding_height:
        type: string
        example: "0"
      unbonding_time:
        type: string
        example: "1970-01-01T00:00:00Z"
      commission:
        type: object
        properties:
          rate:
            type: string
            example: "0"
          max_rate:
            type: string
            example: "0"
          max_change_rate:
            type: string
            example: "0"
          update_time:
            type: string
            example: "1970-01-01T00:00:00Z"
  Delegation:
    type: object
    properties:
      delegation:
        type: object
        properties:
          delegator_address:
            type: string
          validator_address:
            type: string
          shares:
            type: string
      balance:
        $ref: "#/definitions/Coin"
  UnbondingDelegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      entries:
        type: array
        items:
          $ref: "#/definitions/UnbondingEntry"
  UnbondingEntry:
    type: object
    properties:
      initial_balance:
        type: string
      balance:
        type: string
      creation_height:
        type: string
      completion_time:
        type: string
  Redelegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_src_address:
        type: string
      validator_dst_address:
        type: string
      entries:
        type: array
        items:
          $ref: "#/definitions/RedelegationEntry"
  RedelegationEntry:
    type: object
    properties:
      creation_height:
        type: integer
      completion_time:
        type: integer
      initial_balance:
        type: string
      balance:
        type: string
      shares_dst:
        type: string
  ValidatorDistInfo:
    type: object
    properties:
      operator_address:
        $ref: "#/definitions/ValidatorAddress"
      self_bond_rewards:
        type: array
        items:
          $ref: "#/definitions/Coin"
      val_commission:
        type: object
        properties:
          commission:
            type: array
            items:
              $ref: "#/definitions/Coin"
  PublicKey:
    type: object
    properties:
      type:
        type: string
      value:
        type: string
  SigningInfo:
    type: object
    properties:
      address:
        type: string
        example: "terravalcons1qsdpq864szmfk8nh82qcg7lyle6k95w07acdqn"
      start_height:
        type: string
      index_offset:
        type: string
      jailed_until:
        type: string
      missed_blocks_counter:
        type: string
  ParamChange:
    type: object
    properties:
      subspace:
        type: string
        example: "staking"
      key:
        type: string
        example: "MaxValidators"
      subkey:
        type: string
        example: ""
      value:
        type: object
  Supply:
    type: object
    properties:
      total:
        type: array
        items:
          $ref: "#/definitions/Coin"
  BaseAccount:
    type: object
    properties:
      account_number:
        type: string
      address:
        type: string
      public_key:
        type: string
      sequence:
        type: string
  Account:
    type: object
    properties:
      type:
        type: string
        example: "core/Account"
      value:
        $ref: "#/definitions/BaseAccount"
  BaseVestingAccount:
    type: object
    properties:
      BaseAccount:
        $ref: "#/definitions/BaseAccount"
      original_vesting:
        type: array
        items:
          $ref: "#/definitions/Coin"
      delegated_free:
        type: array
        items:
          $ref: "#/definitions/Coin"
      delegated_vesting:
        type: array
        items:
          $ref: "#/definitions/Coin"
      end_time:
        type: string
        example: "0"
  Schedule:
    type: object
    properties:
      start_time:
        type: string
        example: "1556085600"
      end_time:
        type: string
        example: "1556085600"
      ratio:
        type: string
        example: "0.100000000000000000"
  VestingSchedule:
    type: object
    properties:
      denom:
        type: string
        example: "usdr"
      lazy_schedules:
        type: array
        items:
          $ref: "#/definitions/Schedule"
  BaseLazyGradedVestingAccount:
    type: object
    properties:
      BaseVestingAccount:
        $ref: "#/definitions/BaseVestingAccount"
      vesting_schedules:
        type: array
        items:
          $ref: "#/definitions/VestingSchedule"
  LazyGradedVestingAccount:
    type: object
    properties:
      type:
        type: string
        example: "core/LazyGradedVestingAccount"
      value:
        $ref: "#/definitions/BaseLazyGradedVestingAccount"
  SwapReq:
    type: object
    required:
      - base_req
      - offer_coin
      - ask_denom
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      offer_coin:
        $ref: "#/definitions/Coin"
      ask_denom:
        type: string
        example: "uluna"
      receiver:
        type: string
        description: "the `receiver` field can be skipped when the receiver is trader"
        example: "terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv"
  MarketParams:
    type: object
    properties:
      base_pool:
        type: number
        example: "1000000.0"
      pool_recovery_period:
        type: number
        example: "16000"
      min_stability_spread:
        type: number
        example: "0.02"
  PrevoteReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      exchange_rate:
        type: number
        example: "1000.0"
        description: "exchange rate of Luna in denom currency is to make prevote hash; this field is required to submit prevote in case absence of hash"
      salt:
        type: string
        example: "abcd"
        description: "salt is to make prevote hash; this field is required to submit prevote in case  absence of hash"
      hash:
        type: string
        example: "061bf1e27dfff121f40c826e593c8a28ec299a02"
        description: "hex string; hash of next vote; empty == skip prevote"
      validator:
        $ref: "#/definitions/ValidatorAddress"
  VoteReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      exchange_rate:
        type: number
        example: "1000.0"
        description: "proof exchange rate of Luna in denom currency was used to make prevote hash; initial prevote does not require this field"
      salt:
        type: string
        example: "abcd"
        description: "proof salt was used to make prevote hash; initial prevote does not require this field"
      validator:
        $ref: "#/definitions/ValidatorAddress"
  AggregatePrevoteReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      exchange_rates:
        type: string
        example: "1000.0ukrw,1.2uusd,0.99usdr"
        description: "exchange rates of Luna in denom currencies are to make aggregate prevote hash; this field is required to submit prevote in case absence of hash"
      salt:
        type: string
        example: "abcd"
        description: "salt is to make prevote hash; this field is required to submit prevote in case  absence of hash"
      hash:
        type: string
        example: "061bf1e27dfff121f40c826e593c8a28ec299a02"
        description: "hex string; hash of next vote; empty == skip prevote"
  AggregateVoteReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      exchange_rates:
        type: string
        example: "1000.0ukrw,1.2uusd,0.99usdr"
        description: "proof exchange rates of Luna in denom currency were used to make aggregate prevote hash"
      salt:
        type: string
        example: "abcd"
        description: "proof salt was used to make prevote hash; initial prevote does not require this field"
  DelegateReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      feeder:
        $ref: "#/definitions/Address"
  ExchangeRateVote:
    type: object
    properties:
      exchange_rate:
        type: number
        example: "0.01241"
      denom:
        type: string
        example: "ukrw"
      voter:
        $ref: "#/definitions/ValidatorAddress"
  ExchangeRatePrevote:
    type: object
    properties:
      hash:
        type: string
        example: "061bf1e27dfff121f40c826e593c8a28ec299a02"
      denom:
        type: string
        example: "uusd"
      voter:
        $ref: "#/definitions/ValidatorAddress"
      submit_block:
        type: number
        example: "1"
  AggregateExchangeRatePrevote:
    type: object
    properties:
      hash:
        type: string
        example: "061bf1e27dfff121f40c826e593c8a28ec299a02"
      voter:
        $ref: "#/definitions/ValidatorAddress"
      submit_block:
        type: number
        example: "1"
  AggregateExchangeRateVote:
    type: object
    properties:
      exchange_rates:
        type: array
        items:
          $ref: "#/definitions/DecCoin"
      voter:
        $ref: "#/definitions/ValidatorAddress"
  OracleParams:
    type: object
    properties:
      vote_period:
        type: number
        example: "900"
      vote_threshold:
        type: number
        example: "0.67"
      drop_threshold:
        type: number
        example: "10"
      oracle_reward_band:
        type: number
        example: "0.02"
  PolicyConstraints:
    type: object
    properties:
      rate_min:
        type: number
        format: float
        example: "0.0005"
        description: "0.05%"
      rate_max:
        type: number
        format: float
        example: "0.01"
        description: "1%"
      cap:
        $ref: "#/definitions/Coin"
      change_max:
        type: number
        format: float
        example: "0.00025"
        description: "0.025%"
  TreasuryParams:
    type: object
    properties:
      tax_policy:
        $ref: "#/definitions/PolicyConstraints"
      reward_policy:
        $ref: "#/definitions/PolicyConstraints"
      seigniorage_burden_target:
        type: number
        format: float
        example: "0.67"
        description: "67%"
      mining_increment:
        type: number
        format: float
        example: "1.07"
      window_short:
        type: integer
        example: "4"
      window_long:
        type: integer
        example: "52"
      window_probation:
        type: integer
        example: "12"
  WasmParams:
    type: object
    properties:
      max_contract_size:
        type: number
        format: integer
        example: "1000000"
        description: "allowed max contract bytes size"
      max_contract_gas:
        type: number
        format: integer
        example: "1000000"
        description: "allowed max gas usages per each contract execution"
      max_contract_msg_size:
        type: number
        format: integer
        example: "1000000"
        description: "allowed max contract exe msg bytes size"
      max_contract_data_size:
        type: number
        format: integer
        example: "100"
        description: "allowed max contract return data size"
      event_params:
        type: object
        properties:
          max_attribute_num:
            type: string
            example: "128"
            description: "allowed max # of contract attribute num"
          max_attribute_key_length:
            type: string
            example: "128"
            description: "allowed max length of a contract event attribute key"
          max_attribute_value_length:
            type: string
            example: "128"
            description: "allowed max length of a contract event attribute value"
  MultiSignPubKey:
    type: object
    properties:
      threshold:
        type: number
        example: 1
      pubkeys:
        type: array
        items:
          type: string
          example: terrapub1addwnpepq2l6pwj8h9fwxdjuge7lazu0sszpkck0nlhjag6q9drffrd93atywdt8ksu
  StdSignature:
    type: object
    properties:
      signature:
        type: string
        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
      pub_key:
        type: object
        properties:
          type:
            type: string
            example: "tendermint/PubKeySecp256k1"
          value:
            type: string
            example: "Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH"
  EstimateFeeResp:
    type: object
    properties:
      fee:
        type: object
        properties:
          gas:
            type: string
          amount:
            type: array
            items:
              $ref: "#/definitions/Coin"
  CodeInfo:
    type: object
    properties:
      code_hash:
        type: string
      creator:
        type: string
  ContractInfo:
    type: object
    properties:
      code_id:
        type: string
      address:
        $ref: "#/definitions/Address"
        description: contract address
      creator:
        $ref: "#/definitions/Address"
        description: contract creator address
      admin:
        $ref: "#/definitions/Address"
        description: admin address which has contract migration privilege; empty means not migratable
      init_msg:
        type: string
  StoreCodeReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      wasm_bytes:
        type: string
        example: "Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH"
  MigrateCodeReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      wasm_bytes:
        type: string
        example: "Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH"
  InstantiateContractReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      init_coins:
        type: array
        items:
          $ref: "#/definitions/Coin"
      init_msg:
        type: string
        description: json formatted string
        example: "{}"
      admin:
        $ref: "#/definitions/Address"
        description: admin address which has contract migration privilege; empty means not migratable
        example: "terra..."
  ExecuteContractReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      coins:
        type: array
        items:
          $ref: "#/definitions/Coin"
      exec_msg:
        type: string
        example: "{}"
  MigrateContractReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      new_code_id:
        type: number
        format: integer
        example: 10
      migrate_msg:
        type: string
        example: "{}"
  UpdateContractAdminReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      new_admin:
        $ref: "#/definitions/Address"
        description: new contract admin address who has contract migration privilege
        example: "terra..."
  ClearContractAdminReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
  GenericAuthorization:
    type: object
    properties:
      type:
        type: string
        example: "msgauth/GenericAuthorization"
      value:
        type: object
        properties:
          msg_type:
            type: string
            example: "send"
  SendAuthorization:
    type: object
    properties:
      type:
        type: string
        example: "msgauth/SendAuthorization"
      value:
        type: object
        properties:
          spend_limit:
            type: array
            items:
              $ref: "#/definitions/Coin"
  GenericGrantInfo:
    type: object
    properties:
      authorization:
        $ref: "#/definitions/GenericAuthorization"
      expiration:
        type: string
        example: "2021-06-24T09:33:20.012999Z"
  SendGrantInfo:
    type: object
    properties:
      authorization:
        $ref: "#/definitions/SendAuthorization"
      expiration:
        type: string
        example: "2021-06-24T09:33:20.012999Z"
  GrantReq:
    type: object
    required:
      - base_req
      - period
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      period:
        type: string
        description: "nano second of time duration"
        example: "3600000000000"
      limit:
        type: array
        items:
          $ref: "#/definitions/Coin"
        description: "required when grant MsgType == send"
  RevokeGrantReq:
    type: object
    required:
      - base_req
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
  ExecuteGrantReq:
    type: object
    required:
      - base_req
      - msgs
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      msgs:
        type: array
        items:
          $ref: "#/definitions/Msg"
  TaxCap:
    type: object
    properties:
      denom:
        type: string
        example: uluna
      tax_cap:
        type: string
        example: "50"
