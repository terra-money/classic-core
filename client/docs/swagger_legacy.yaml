---
swagger: "2.0"
info:
  version: "2.1.0"
  title: "Terra-Lite for Terra Classic"
  description: A REST interface for state queries, transaction generation and broadcasting.
tags:
  - name: Transactions
    description: Search, encode, or broadcast transactions.
  - name: Tendermint RPC
    description: Tendermint APIs, such as query blocks, transactions and validatorset
  - name: TerraWasm
    description: Terra Wasm modules APIs
schemes:
  - https
host: lcd.terra.dev
securityDefinitions:
  kms:
    type: basic
paths:
  /node_info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      tags:
        - Terra REST
      produces:
        - application/json
      responses:
        200:
          description: Node status
          schema:
            type: object
            properties:
              application_version:
                properties:
                  build_tags:
                    type: string
                  client_name:
                    type: string
                  commit:
                    type: string
                  go:
                    type: string
                  name:
                    type: string
                  server_name:
                    type: string
                  version:
                    type: string
              node_info:
                properties:
                  id:
                    type: string
                  moniker:
                    type: string
                    example: validator-name
                  protocol_version:
                    properties:
                      p2p:
                        type: string
                        example: 7
                      block:
                        type: string
                        example: 10
                      app:
                        type: string
                        example: 0
                  network:
                    type: string
                    example: gaia-2
                  channels:
                    type: string
                  listen_addr:
                    type: string
                    example: 192.168.56.1:26656
                  version:
                    description: Tendermint version
                    type: string
                    example: 0.15.0
                  other:
                    description: more information on versions
                    type: object
                    properties:
                      tx_index:
                        type: string
                        example: on
                      rpc_address:
                        type: string
                        example: tcp://0.0.0.0:26657
        500:
          description: Failed to query node status
  /syncing:
    get:
      summary: Syncing state of node
      tags:
        - Tendermint RPC
      description: Get if the node is currently syning with other nodes
      produces:
        - application/json
      responses:
        200:
          description: Node syncing status
          schema:
            type: object
            properties:
              syncing:
                type: boolean
        500:
          description: Server internal error
  /blocks/latest:
    get:
      summary: Get the latest block
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        200:
          description: The latest block
          schema:
            $ref: "#/definitions/BlockQuery"
        500:
          description: Server internal error
  /blocks/{height}:
    get:
      summary: Get a block at a certain height
      tags:
        - Tendermint RPC
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        200:
          description: The block at a specific height
          schema:
            $ref: "#/definitions/BlockQuery"
        404:
          description: Request block height doesn't
        400:
          description: Invalid height
        500:
          description: Server internal error
  /validatorsets/latest:
    get:
      summary: Get the latest validator set
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        200:
          description: The validator set at the latest block height
          schema:
            type: object
            properties:
              block_height:
                type: string
              validators:
                type: array
                items:
                  $ref: "#/definitions/TendermintValidator"
        500:
          description: Server internal error
  /validatorsets/{height}:
    get:
      summary: Get a validator set a certain height
      tags:
        - Tendermint RPC
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        200:
          description: The validator set at a specific block height
          schema:
            type: object
            properties:
              block_height:
                type: string
              validators:
                type: array
                items:
                  $ref: "#/definitions/TendermintValidator"
        404:
          description: Block at height not available
        400:
          description: Invalid height
        500:
          description: Server internal error
  /txs/{hash}:
    get:
      deprecated: true
      summary: Get a Tx by hash
      tags:
        - Transactions
      description: Retrieve a transaction using its hash.
      produces:
        - application/json
      parameters:
        - in: path
          name: hash
          description: Tx hash
          required: true
          type: string
          x-example: BCBE20E8D46758B96AE5883B792858296AC06E51435490FBDCAE25A72B3CC76B
      responses:
        200:
          description: Tx with the provided hash
          schema:
            $ref: "#/definitions/TxQuery"
        500:
          description: Internal Server Error
  /txs:
    get:
      deprecated: true
      tags:
        - Transactions
      summary: Search transactions
      description: Search transactions by events.
      produces:
        - application/json
      parameters:
        - in: query
          name: message.action
          type: string
          description: "transaction events such as 'message.action=send' which results in the following endpoint: 'GET /txs?message.action=send'. note that each module documents its own events. look for xx_events.md in the corresponding cosmos-sdk/docs/spec directory"
          x-example: "send"
        - in: query
          name: message.sender
          type: string
          description: "transaction events with sender: 'GET /txs?message.action=send&message.sender=terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv'"
          x-example: "terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv"
        - in: query
          name: page
          description: Page number
          type: integer
          x-example: 1
        - in: query
          name: limit
          description: Maximum number of items per page
          type: integer
          x-example: 1
        - in: query
          name: tx.minheight
          type: integer
          description: "transactions on blocks with height greater or equal this value"
          x-example: 25
        - in: query
          name: tx.maxheight
          type: integer
          description: "transactions on blocks with height less than or equal this value"
          x-example: 800000
      responses:
        200:
          description: All txs matching the provided events
          schema:
            $ref: "#/definitions/PaginatedQueryTxs"
        400:
          description: Invalid search events
        500:
          description: Internal Server Error
    post:
      deprecated: true
      tags:
        - Transactions
      summary: Broadcast a signed tx
      description: Broadcast a signed tx to a full node
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: txBroadcast
          description: The tx must be a signed StdTx. The supported broadcast modes include `"block"`(return after tx commit), `"sync"`(return afer CheckTx) and `"async"`(return right away).
          required: true
          schema:
            type: object
            properties:
              tx:
                required: true
                $ref: "#/definitions/StdTx"
              mode:
                required: true
                type: string
                example: block
              sequences:
                required: false
                type: array
                items:
                  type: string
                  example: "1"
              fee_granter:
                required: false
                $ref: "#/definitions/Address"
      responses:
        200:
          description: Tx broadcasting result
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        500:
          description: Internal Server Error
  /txs/encode:
    post:
      deprecated: true
      tags:
        - Transactions
      summary: Encode a legacy transaction to the Proto wire format
      description: Encode a legacy transaction (signed or not) from JSON to base64-encoded Proto serialized bytes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tx
          description: The tx to encode
          required: true
          schema:
            type: object
            properties:
              tx:
                $ref: "#/definitions/StdTx"
              sequences:
                required: false
                type: array
                items:
                  type: string
                  example: "1"
              fee_granter:
                required: false
                $ref: "#/definitions/Address"
      responses:
        200:
          description: The tx was successfully decoded and re-encoded
          schema:
            type: object
            properties:
              tx:
                type: string
                example: The base64-encoded Proto-serialized bytes for the tx
        400:
          description: The tx was malformed
        500:
          description: Server internal error
  /txs/decode:
    post:
      deprecated: true
      tags:
        - Transactions
      summary: Decode a transaction from the Amino wire format
      description: Decode a transaction (signed or not) from base64-encoded Amino serialized bytes to JSON
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tx
          description: The tx to decode
          required: true
          schema:
            type: object
            properties:
              tx:
                type: string
                example: SvBiXe4KPqijYZoKFFHEzJ8c2HPAfv2EFUcIhx0yPagwEhTy0vPA+GGhCEslKXa4Af0uB+mfShoMCgVzdGFrZRIDMTAwEgQQwJoM
      responses:
        200:
          description: The tx was successfully decoded
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: The tx was malformed
        500:
          description: Server internal error
  /txs/estimate_fee:
    post:
      deprecated: true
      tags:
        - Transactions
      summary: Estimate fee and gas of a transaction
      description: Estimate fee and gas of a transaction according to given parameters
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: transaction
          description: The sender and tx information
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              msgs:
                type: array
                items:
                  $ref: "#/definitions/Msg"
      responses:
        200:
          description: The fee was successfully estimated
          schema:
            type: object
            properties:
              gas:
                type: string
              amount:
                type: array
                items:
                  $ref: "#/definitions/Coin"
        400:
          description: The tx was malformed
        500:
          description: Server internal error
  /terra/wasm/v1beta1/codes/{code_id}:
    get:
      deprecated: true
      summary: CodeInfo returns the stored code info
      operationId: CodeInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: "#/definitions/terra.wasm.v1beta1.QueryCodeInfoResponse"
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/grpc.gateway.runtime.Error"
      parameters:
        - name: code_id
          description: grpc-gateway_out does not support Go style CodID
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - TerraWasm
  /terra/wasm/v1beta1/codes/{code_id}/byte_code:
    get:
      deprecated: true
      summary: ByteCode returns the stored byte code
      operationId: ByteCode
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: "#/definitions/terra.wasm.v1beta1.QueryByteCodeResponse"
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/grpc.gateway.runtime.Error"
      parameters:
        - name: code_id
          description: grpc-gateway_out does not support Go style CodID
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - TerraWasm
  /terra/wasm/v1beta1/contracts/{contract_address}:
    get:
      deprecated: true
      summary: ContractInfo returns the stored contract info
      operationId: TerraContractInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: "#/definitions/terra.wasm.v1beta1.QueryContractInfoResponse"
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/grpc.gateway.runtime.Error"
      parameters:
        - name: contract_address
          in: path
          required: true
          type: string
      tags:
        - TerraWasm
  /terra/wasm/v1beta1/contracts/{contract_address}/store:
    get:
      deprecated: true
      summary: ContractStore return smart query result from the contract
      operationId: ContractStore
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: "#/definitions/terra.wasm.v1beta1.QueryContractStoreResponse"
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/grpc.gateway.runtime.Error"
      parameters:
        - name: contract_address
          in: path
          required: true
          type: string
        - name: query_msg
          in: query
          required: false
          type: string
          format: byte
      tags:
        - TerraWasm
  /terra/wasm/v1beta1/contracts/{contract_address}/store/raw:
    get:
      deprecated: true
      summary: RawStore return single key from the raw store data of a contract
      operationId: RawStore
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: "#/definitions/terra.wasm.v1beta1.QueryRawStoreResponse"
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/grpc.gateway.runtime.Error"
      parameters:
        - name: contract_address
          in: path
          required: true
          type: string
        - name: key
          in: query
          required: false
          type: string
          format: byte
      tags:
        - TerraWasm
  /terra/wasm/v1beta1/params:
    get:
      deprecated: true
      summary: Params queries all parameters.
      operationId: TerraWasmParams
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: "#/definitions/terra.wasm.v1beta1.QueryParamsResponse"
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/grpc.gateway.runtime.Error"
      tags:
        - TerraWasm
definitions:
  CheckTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          $ref: "#/definitions/KVPair"
    example:
      code: 0
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ""
        - ""
  DeliverTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          $ref: "#/definitions/KVPair"
    example:
      code: 5
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ""
        - ""
  BroadcastTxCommitResult:
    type: object
    properties:
      check_tx:
        $ref: "#/definitions/CheckTxResult"
      deliver_tx:
        $ref: "#/definitions/DeliverTxResult"
      hash:
        $ref: "#/definitions/Hash"
      height:
        type: integer
  KVPair:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Msg:
    type: string
  Address:
    type: string
    description: bech32 encoded address
    example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
  ValidatorAddress:
    type: string
    description: bech32 encoded address
    example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
  Coin:
    type: object
    properties:
      denom:
        type: string
        example: uluna
      amount:
        type: string
        example: "50"
  DecCoin:
    type: object
    properties:
      denom:
        type: string
        example: ukrw
      amount:
        type: string
        example: "50.000"
  Hash:
    type: string
    example: EE5F3404034C524501629B56E0DDC38FAD651F04
  TxQuery:
    type: object
    properties:
      hash:
        type: string
        example: "D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656"
      height:
        type: number
        example: 368
      tx:
        $ref: "#/definitions/StdTx"
      result:
        type: object
        properties:
          log:
            type: string
          gas_wanted:
            type: string
            example: "200000"
          gas_used:
            type: string
            example: "26354"
          tags:
            type: array
            items:
              $ref: "#/definitions/KVPair"
  PaginatedQueryTxs:
    type: object
    properties:
      total_count:
        type: number
        example: 1
      count:
        type: number
        example: 1
      page_number:
        type: number
        example: 1
      page_total:
        type: number
        example: 1
      limit:
        type: number
        example: 30
      txs:
        type: array
        items:
          $ref: "#/definitions/TxQuery"
  StdTx:
    type: object
    properties:
      msg:
        type: array
        items:
          $ref: "#/definitions/Msg"
      fee:
        type: object
        properties:
          gas:
            type: string
          amount:
            type: array
            items:
              $ref: "#/definitions/Coin"
      memo:
        type: string
      signature:
        type: object
        properties:
          signature:
            type: string
            example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
          pub_key:
            type: object
            properties:
              type:
                type: string
                example: "tendermint/PubKeySecp256k1"
              value:
                type: string
                example: "Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH"
          account_number:
            type: string
            example: "0"
          sequence:
            type: string
            example: "0"
  BlockID:
    type: object
    properties:
      hash:
        $ref: "#/definitions/Hash"
      parts:
        type: object
        properties:
          total:
            type: number
            example: 0
          hash:
            $ref: "#/definitions/Hash"
  BlockHeader:
    type: object
    properties:
      chain_id:
        type: string
        example: columbus-5
      height:
        type: number
        example: 1
      time:
        type: string
        example: "2017-12-30T05:53:09.287+01:00"
      num_txs:
        type: number
        example: 0
      last_block_id:
        $ref: "#/definitions/BlockID"
      total_txs:
        type: number
        example: 35
      last_commit_hash:
        $ref: "#/definitions/Hash"
      data_hash:
        $ref: "#/definitions/Hash"
      validators_hash:
        $ref: "#/definitions/Hash"
      next_validators_hash:
        $ref: "#/definitions/Hash"
      consensus_hash:
        $ref: "#/definitions/Hash"
      app_hash:
        $ref: "#/definitions/Hash"
      last_results_hash:
        $ref: "#/definitions/Hash"
      evidence_hash:
        $ref: "#/definitions/Hash"
      proposer_address:
        $ref: "#/definitions/Address"
      version:
        type: object
        properties:
          block:
            type: string
            example: 10
          app:
            type: string
            example: 0
  Block:
    type: object
    properties:
      header:
        $ref: "#/definitions/BlockHeader"
      txs:
        type: array
        items:
          type: string
      evidence:
        type: array
        items:
          type: string
      last_commit:
        type: object
        properties:
          block_id:
            $ref: "#/definitions/BlockID"
          precommits:
            type: array
            items:
              type: object
              properties:
                validator_address:
                  type: string
                validator_index:
                  type: string
                  example: "0"
                height:
                  type: string
                  example: "0"
                round:
                  type: string
                  example: "0"
                timestamp:
                  type: string
                  example: "2017-12-30T05:53:09.287+01:00"
                type:
                  type: number
                  example: 2
                block_id:
                  $ref: "#/definitions/BlockID"
                signature:
                  type: string
                  example: "7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ=="
  BlockQuery:
    type: object
    properties:
      block_meta:
        type: object
        properties:
          header:
            $ref: "#/definitions/BlockHeader"
          block_id:
            $ref: "#/definitions/BlockID"
      block:
        $ref: "#/definitions/Block"
  BaseReq:
    type: object
    properties:
      from:
        type: string
        example: "terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv"
        description: Sender address or Keybase name to generate a transaction
      memo:
        type: string
        example: "Sent via Terra Station 🚀"
      chain_id:
        type: string
        example: "Columbus-5"
      account_number:
        type: string
        example: "0"
      sequence:
        type: string
        example: "1"
      gas:
        type: string
        example: "200000"
      gas_adjustment:
        type: string
        example: "1.2"
      fees:
        type: array
        items:
          $ref: "#/definitions/Coin"
      simulate:
        type: boolean
        example: false
        description: Estimate gas for a transaction (cannot be used in conjunction with generate_only)
  TendermintValidator:
    type: object
    properties:
      address:
        $ref: "#/definitions/ValidatorAddress"
      pub_key:
        $ref: "#/definitions/PublicKey"
      voting_power:
        type: string
        example: "1000"
      proposer_priority:
        type: string
        example: "1000"
  PublicKey:
    type: object
    properties:
      type:
        type: string
      value:
        type: string
  terra.wasm.v1beta1.QueryCodeInfoResponse:
    type: object
    properties:
      code_info:
        $ref: "#/definitions/terra.wasm.v1beta1.CodeInfo"
    description: |-
      QueryCodeInfoResponse is response type for the
      QueryyCodeInfo RPC method.
  terra.wasm.v1beta1.CodeInfo:
    type: object
    properties:
      code_id:
        type: string
        format: uint64
        title: CodeID is the sequentially increasing unique identifier
      code_hash:
        type: string
        format: byte
        title: CodeHash is the unique identifier created by wasmvm
      creator:
        type: string
        title: Creator address who initially stored the code
    title: CodeInfo is data for the uploaded contract WASM code
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          $ref: "#/definitions/google.protobuf.Any"
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
      value:
        type: string
        format: byte
  terra.wasm.v1beta1.QueryByteCodeResponse:
    type: object
    properties:
      byte_code:
        type: string
        format: byte
    description: |-
      QueryByteCodeResponse is response type for the
      QueryyByteCode RPC method.
  terra.wasm.v1beta1.QueryContractInfoResponse:
    type: object
    properties:
      contract_info:
        $ref: "#/definitions/terra.wasm.v1beta1.ContractInfo"
    description: |-
      QueryContractInfoResponse is response type for the
      Query/ContractInfo RPC method.
  terra.wasm.v1beta1.ContractInfo:
    type: object
    properties:
      address:
        type: string
        title: Address is the address of the contract
      creator:
        type: string
        title: Creator is the contract creator address
      admin:
        type: string
        title: Admin is who can execute the contract migration
      code_id:
        type: string
        format: uint64
        title: CodeID is the reference to the stored Wasm code
      init_msg:
        type: string
        format: byte
        title: InitMsg is the raw message used when instantiating a contract
    title: ContractInfo stores a WASM contract instance
  terra.wasm.v1beta1.QueryContractStoreResponse:
    type: object
    properties:
      query_result:
        type: string
        format: byte
    description: |-
      QueryContractStoreResponse is response type for the
      Query/ContractStore RPC method.
  terra.wasm.v1beta1.QueryRawStoreResponse:
    type: object
    properties:
      data:
        type: string
        format: byte
        title: Data contains the raw store data
    description: |-
      QueryRawStoreResponse is response type for the
      Query/RawStore RPC method.
  terra.wasm.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        $ref: "#/definitions/terra.wasm.v1beta1.Params"
        description: params defines the parameters of the module.
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  terra.wasm.v1beta1.Params:
    type: object
    properties:
      max_contract_size:
        type: string
        format: uint64
      max_contract_gas:
        type: string
        format: uint64
      max_contract_msg_size:
        type: string
        format: uint64
    description: Params defines the parameters for the wasm module.
  TerraWasmParams:
    type: object
    properties:
      max_contract_size:
        type: number
        format: integer
        example: '1000000'
        description: allowed max contract bytes size
      max_contract_gas:
        type: number
        format: integer
        example: '1000000'
        description: allowed max gas usages per each contract execution
      max_contract_msg_size:
        type: number
        format: integer
        example: '1000000'
        description: allowed max contract exe msg bytes size
      max_contract_data_size:
        type: number
        format: integer
        example: '100'
        description: allowed max contract return data size
      event_params:
        type: object
        properties:
          max_attribute_num:
            type: string
            example: '128'
            description: 'allowed max # of contract attribute num'
          max_attribute_key_length:
            type: string
            example: '128'
            description: allowed max length of a contract event attribute key
          max_attribute_value_length:
            type: string
            example: '128'
            description: allowed max length of a contract event attribute value
  TerraContractInfo:
    type: object
    properties:
      code_id:
        type: string
      address:
        type: string
        description: bech32 encoded address
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      creator:
        type: string
        description: bech32 encoded address
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      admin:
        type: string
        description: bech32 encoded address
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      init_msg:
        type: string