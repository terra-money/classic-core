---
swagger: "2.0"
info:
  version: "3.0"
  title: 'Terra-Lite for Terra'
  description: A REST interface for state queries, transaction generation and broadcasting.
tags:
  - name: Transactions
    description: Search, encode, or broadcast transactions.
  - name: Tendermint RPC
    description: Tendermint APIs, such as query blocks, transactions and validatorset
  - name: Auth
    description: Authenticate accounts
  - name: Bank
    description: Create and broadcast transactions
  - name: Staking
    description: Stake module APIs
  - name: Governance
    description: Governance module APIs
  - name: Slashing
    description: Slashing module APIs
  - name: Distribution
    description: Fee distribution module APIs
  - name: Supply
    description: Supply module APIs
  - name: Market
    description: Market modules APIs
  - name: Oracle
    description: Get price and voting modules APIs
  - name: Treasury
    description: Treasury modules APIs
  - name: version
  - name: Misc
    description: Query app version
schemes:
  - https
host: lcd.terra.dev
securityDefinitions:
  kms:
    type: basic
paths:
  /node_info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        200:
          description: Node status
          schema:
            type: object
            properties:
              application_version:
                properties:
                  build_tags:
                    type: string
                  client_name:
                    type: string
                  commit:
                    type: string
                  go:
                    type: string
                  name:
                    type: string
                  server_name:
                    type: string
                  version:
                    type: string
              node_info:
                properties:
                  id:
                    type: string
                  moniker:
                    type: string
                    example: validator-name
                  protocol_version:
                    properties:
                      p2p:
                        type: string
                        example: 7
                      block:
                        type: string
                        example: 10
                      app:
                        type: string
                        example: 0
                  network:
                    type: string
                    example: gaia-2
                  channels:
                    type: string
                  listen_addr:
                    type: string
                    example: 192.168.56.1:26656
                  version:
                    description: Tendermint version
                    type: string
                    example: 0.15.0
                  other:
                    description: more information on versions
                    type: object
                    properties:
                      tx_index:
                        type: string
                        example: on
                      rpc_address:
                        type: string
                        example: tcp://0.0.0.0:26657
        500:
          description: Failed to query node status
  /syncing:
    get:
      summary: Syncing state of node
      tags:
        - Tendermint RPC
      description: Get if the node is currently syning with other nodes
      produces:
        - application/json
      responses:
        200:
          description: Node syncing status
          schema:
            type: object
            properties:
              syncing:
                type: boolean
        500:
          description: Server internal error
  /blocks/latest:
    get:
      summary: Get the latest block
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        200:
          description: The latest block
          schema:
            $ref: "#/definitions/BlockQuery"
        500:
          description: Server internal error
  /blocks/{height}:
    get:
      summary: Get a block at a certain height
      tags:
        - Tendermint RPC
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        200:
          description: The block at a specific height
          schema:
            $ref: "#/definitions/BlockQuery"
        404:
          description: Request block height doesn't
        400:
          description: Invalid height
        500:
          description: Server internal error
  /validatorsets/latest:
    get:
      summary: Get the latest validator set
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        200:
          description: The validator set at the latest block height
          schema:
            type: object
            properties:
              block_height:
                type: string
              validators:
                type: array
                items:
                  $ref: "#/definitions/TendermintValidator"
        500:
          description: Server internal error
  /validatorsets/{height}:
    get:
      summary: Get a validator set a certain height
      tags:
        - Tendermint RPC
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        200:
          description: The validator set at a specific block height
          schema:
            type: object
            properties:
              block_height:
                type: string
              validators:
                type: array
                items:
                  $ref: "#/definitions/TendermintValidator"
        404:
          description: Block at height not available
        400:
          description: Invalid height
        500:
          description: Server internal error
  /txs/{hash}:
    get:
      summary: Get a Tx by hash
      tags:
        - Transactions
      description: Retrieve a transaction using its hash.
      produces:
        - application/json
      parameters:
        - in: path
          name: hash
          description: Tx hash
          required: true
          type: string
          x-example: BCBE20E8D46758B96AE5883B792858296AC06E51435490FBDCAE25A72B3CC76B
      responses:
        200:
          description: Tx with the provided hash
          schema:
            $ref: "#/definitions/TxQuery"
        500:
          description: Internal Server Error
  /txs:
    get:
      tags:
        - Transactions
      summary: Search transactions
      description: Search transactions by events.
      produces:
        - application/json
      parameters:
        - in: query
          name: message.action
          type: string
          description: "transaction events such as 'message.action=send' which results in the following endpoint: 'GET /txs?message.action=send'"
          x-example: "send"
        - in: query
          name: message.sender
          type: string
          description: "transaction tags with sender: 'GET /txs?message.action=send&message.sender=terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv'"
          x-example: "terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv"
        - in: query
          name: page
          description: Page number
          type: integer
          x-example: 1
        - in: query
          name: limit
          description: Maximum number of items per page
          type: integer
          x-example: 1
      responses:
        200:
          description: All txs matching the provided events
          schema:
            $ref: "#/definitions/PaginatedQueryTxs"
        400:
          description: Invalid search events
        500:
          description: Internal Server Error
    post:
      tags:
        - Transactions
      summary: Broadcast a signed tx
      description: Broadcast a signed tx to a full node
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: txBroadcast
          description: The tx must be a signed StdTx. The supported broadcast modes include `"block"`(return after tx commit), `"sync"`(return afer CheckTx) and `"async"`(return right away).
          required: true
          schema:
            type: object
            properties:
              tx:
                $ref: "#/definitions/StdTx"
              mode:
                type: string
                example: block
      responses:
        200:
          description: Tx broadcasting result
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        500:
          description: Internal Server Error
  /txs/encode:
    post:
      tags:
        - Transactions
      summary: Encode a transaction to the Amino wire format
      description: Encode a transaction (signed or not) from JSON to base64-encoded Amino serialized bytes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tx
          description: The tx to encode
          required: true
          schema:
            type: object
            properties:
              tx:
                $ref: "#/definitions/StdTx"
      responses:
        200:
          description: The tx was successfully decoded and re-encoded
          schema:
            type: object
            properties:
              tx:
                type: string
                example: The base64-encoded Amino-serialized bytes for the tx
        400:
          description: The tx was malformated
        500:
          description: Server internal error
  /txs/estimate_fee:
    post:
      tags:
        - Transactions
      summary: Estimate fees and gas of a transaction
      description: Estimate fees and gas of a transaction according to given parameters
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: estimate_req
          description: The tx and gas params to compute fees
          required: true
          schema:
            type: object
            properties:
              tx:
                $ref: "#/definitions/StdTx"
              gas_adjustment:
                type: string
                description: only used when tx's gas is "0", default "1"
                example: "1.4"
              gas_prices:
                description: used to compute gas fees = (gas * gas_prices), default 0
                type: array
                items:
                  $ref: "#/definitions/DecCoin"
      responses:
        200:
          description: Estimated gas and fees object
          schema:
            $ref: "#/definitions/EstimateFeeResp"
        400:
          description: The tx was malformated
        500:
          description: Server internal error
  /bank/balances/{address}:
    get:
      summary: Get the account balances
      tags:
        - Bank
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
          x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: Account balances
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        500:
          description: Server internal error
  /bank/accounts/{address}/transfers:
    post:
      summary: Send coins from one account to another
      tags:
        - Bank
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
          x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        - in: body
          name: account
          description: The sender and tx information
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              coins:
                type: array
                items:
                  $ref: "#/definitions/Coin"
      responses:
        202:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /auth/accounts/{address}:
    get:
      summary: Get the account information on blockchain
      tags:
        - Auth
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address
          required: true
          type: string
          x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: Account information on the blockchain (one of Account and LazyGradedVestingAccount)
          schema:
            type: object
            properties:
              Account:
                $ref: "#/definitions/Account"
              LazyGradedVestingAccount:
                $ref: "#/definitions/LazyGradedVestingAccount"
        204:
          description: No content about this account address
        500:
          description: Server internel error
  /auth/accounts/{address}/multisign:
    post:
      summary: "Generate multisig signatures for transactions generated offline"
      tags:
        - Auth
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address
          required: true
          type: string
          x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        - in: body
          name: multisig_req
          description: multisign request information; pubkey is optional param in case multisig account never used before
          required: true
          schema:
            $ref: "#/definitions/MultiSignReq"
      responses:
        200:
          description: Generated multisigned tx or multisig
          schema:
            type: object
            properties:
              MultiSignedTx:
                $ref: "#/definitions/StdTx"
              MultiSig:
                $ref: "#/definitions/StdSignature"
        500:
          description: Server internel error
  /staking/delegators/{delegatorAddr}/delegations:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    get:
      summary: Get all delegations from a delegator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Delegation"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      summary: Submit delegation
      parameters:
        - in: body
          name: delegation
          description: The password of the account to remove from the KMS
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              delegator_address:
                $ref: "#/definitions/Address"
              validator_address:
                $ref: "#/definitions/ValidatorAddress"
              delegation:
                $ref: "#/definitions/Coin"
      tags:
        - Staking
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid delegator address or delegation request body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/delegations/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      summary: Query the current delegation between a delegator and a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Delegation"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/unbonding_delegations:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    get:
      summary: Get all unbonding delegations from a delegator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UnbondingDelegation"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      summary: Submit an unbonding delegation
      parameters:
        - in: body
          name: delegation
          description: The password of the account to remove from the KMS
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              delegator_address:
                $ref: "#/definitions/Address"
              validator_address:
                $ref: "#/definitions/ValidatorAddress"
              shares:
                type: string
                example: "100"
      tags:
        - Staking
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid delegator address or unbonding delegation request body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      summary: Query all unbonding delegations between a delegator and a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UnbondingDelegationPair"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /staking/redelegations:
    parameters:
      - in: query
        name: delegator
        description: Bech32 AccAddress of Delegator
        required: false
        type: string
      - in: query
        name: validator_from
        description: Bech32 ValAddress of SrcValidator
        required: false
        type: string
      - in: query
        name: validator_to
        description: Bech32 ValAddress of DstValidator
        required: false
        type: string
    get:
      summary: Get all redelegations (filter by query params)
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Redelegation"
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/redelegations:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    post:
      summary: Submit a redelegation
      parameters:
        - in: body
          name: delegation
          description: The sender and tx information
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              delegator_address:
                $ref: "#/definitions/Address"
              validator_src_addressess:
                $ref: "#/definitions/ValidatorAddress"
              validator_dst_address:
                $ref: "#/definitions/ValidatorAddress"
              shares:
                type: string
                example: "100"
      tags:
        - Staking
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid delegator address or redelegation request body
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/validators:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    get:
      summary: Query all validators that a delegator is bonded to
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Validator"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/validators/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      - in: path
        name: validatorAddr
        description: Bech32 ValAddress of Delegator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      summary: Query a validator that a delegator is bonded to
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Validator"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/txs:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra167w96tdvmazakdwkw2u57227eduula2cy572lf
    get:
      summary: Get all staking txs (i.e msgs) from a delegator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/TxQuery"
        204:
          description: No staking transaction about this delegator address
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
  /staking/validators:
    get:
      summary: Get all validator candidates. By default it returns only the bonded validators.
      parameters:
        - in: query
          name: status
          type: string
          description: The validator bond status. Must be either 'bonded', 'unbonded', or 'unbonding'.
          x-example: bonded
        - in: query
          name: page
          description: The page number.
          type: integer
          x-example: 1
        - in: query
          name: limit
          description: The maximum number of items per page.
          type: integer
          x-example: 1
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Validator"
        500:
          description: Internal Server Error
  /staking/validators/{validatorAddr}:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
    get:
      summary: Query the information from a single validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Validator"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /staking/validators/{validatorAddr}/delegations:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
    get:
      summary: Get all delegations from a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Delegation"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /staking/validators/{validatorAddr}/unbonding_delegations:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
    get:
      summary: Get all unbonding delegations from a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UnbondingDelegation"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /staking/pool:
    get:
      summary: Get the current state of the staking pool
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              loose_tokens:
                type: string
              bonded_tokens:
                type: string
              inflation_last_time:
                type: string
              inflation:
                type: string
              date_last_commission_reset:
                type: string
              prev_bonded_shares:
                type: string
        500:
          description: Internal Server Error
  /staking/parameters:
    get:
      summary: Get the current staking parameter values
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              inflation_rate_change:
                type: string
              inflation_max:
                type: string
              inflation_min:
                type: string
              goal_bonded:
                type: string
              unbonding_time:
                type: string
              max_validators:
                type: integer
              bond_denom:
                type: string
        500:
          description: Internal Server Error
  /slashing/validators/{validatorPubKey}/signing_info:
    get:
      summary: Get sign info of given validator
      description: Get sign info of given validator
      produces:
        - application/json
      tags:
        - Slashing
      parameters:
        - type: string
          description: Bech32 validator public key
          name: validatorPubKey
          required: true
          in: path
          x-example: terravalconspub1zcjduepq7mft6gfls57a0a42d7uhx656cckhfvtrlmw744jv4q0mvlv0dypskehfk8
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SigningInfo"
        204:
          description: No sign info of this validator
        400:
          description: Invalid validator public key
        500:
          description: Internal Server Error
  /slashing/signing_infos:
    get:
      summary: Get sign info of given all validators
      description: Get sign info of all validators
      produces:
        - application/json
      tags:
        - Slashing
      parameters:
        - in: query
          name: page
          description: Page number
          type: integer
          required: true
          x-example: 1
        - in: query
          name: limit
          description: Maximum number of items per page
          type: integer
          required: true
          x-example: 5
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SigningInfo"
        400:
          description: Invalid validator public key for one of the validators
        500:
          description: Internal Server Error
  /slashing/validators/{validatorAddr}/unjail:
    post:
      summary: Unjail a jailed validator
      description: Send transaction to unjail a jailed validator
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Slashing
      parameters:
        - type: string
          description: Bech32 validator address
          name: validatorAddr
          required: true
          in: path
          x-example: terravaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
        - description: ""
          name: UnjailBody
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/StdTx"
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid validator address or base_req
        500:
          description: Internal Server Error
  /slashing/parameters:
    get:
      summary: Get the current slashing parameters
      tags:
        - Slashing
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              max_evidence_age:
                type: string
              signed_blocks_window:
                type: string
              min_signed_per_window:
                type: string
              double_sign_unbond_duration:
                type: string
              downtime_unbond_duration:
                type: string
              slash_fraction_double_sign:
                type: string
              slash_fraction_downtime:
                type: string
        500:
          description: Internal Server Error
  /gov/proposals:
    post:
      summary: Submit a proposal
      description: Send transaction to submit a proposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - description: valid value of `"proposal_type"` can be `"text"`, `"parameter_change"`, `"software_upgrade"`
          name: post_proposal_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              title:
                type: string
              description:
                type: string
              proposal_type:
                type: string
                example: "text"
              proposer:
                $ref: "#/definitions/Address"
              initial_deposit:
                type: array
                items:
                  $ref: "#/definitions/Coin"
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid proposal body
        500:
          description: Internal Server Error
    get:
      summary: Query proposals
      description: Query proposals information with parameters
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - in: query
          name: voter
          description: voter address
          required: false
          type: string
        - in: query
          name: depositor
          description: depositor address
          required: false
          type: string
        - in: query
          name: status
          description: proposal status, valid values can be `"deposit_period"`, `"voting_period"`, `"passed"`, `"rejected"`
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/TextProposal"
        400:
          description: Invalid query parameters
        500:
          description: Internal Server Error
  /gov/proposals/param_change:
    post:
      summary: Generate a parameter change proposal transaction
      description: Generate a parameter change proposal transaction
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - description: The parameter change proposal body that contains all parameter changes
          name: post_proposal_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              title:
                type: string
                x-example: "Param Change"
              description:
                type: string
                x-example: "Update max validators"
              proposer:
                $ref: "#/definitions/Address"
              deposit:
                type: array
                items:
                  $ref: "#/definitions/Coin"
              changes:
                type: array
                items:
                  $ref: "#/definitions/ParamChange"
      responses:
        200:
          description: The transaction was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid proposal body
        500:
          description: Internal Server Error
  /gov/proposals/community_pool_spend:
    post:
      summary: Grant community pool coins to contributor
      description: Generate a community pool spend transaction
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - description: The community pool spend proposal body that contains receipient and reward info
          name: post_proposal_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              title:
                type: string
                x-example: "Param Change"
              description:
                type: string
                x-example: "Update max validators"
              proposer:
                $ref: "#/definitions/Address"
              deposit:
                type: array
                items:
                  $ref: "#/definitions/Coin"
              recipient:
                type: array
                items:
                  $ref: "#/definitions/Address"
              amount:
                type: array
                items:
                  $ref: "#/definitions/Coin"
      responses:
        200:
          description: The transaction was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid proposal body
        500:
          description: Internal Server Error
  /gov/proposals/tax_rate_update:
    post:
      summary: Tax Rate update proposal
      description: Generate a tax rate update transaction
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - description: The tax rate update body that contains new tax rate info
          name: post_proposal_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              title:
                type: string
                x-example: "Param Change"
              description:
                type: string
                x-example: "Update max validators"
              proposer:
                $ref: "#/definitions/Address"
              deposit:
                type: array
                items:
                  $ref: "#/definitions/Coin"
              tax_rate:
                type: number
                format: float
                example: "0.12"
      responses:
        200:
          description: The transaction was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid proposal body
        500:
          description: Internal Server Error
  /gov/proposals/reward_weight_update:
    post:
      summary: Reward Weight update proposal
      description: Generate a reward weight update transaction
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - description: The reward weight update body that contains new reward weight info
          name: post_proposal_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              title:
                type: string
                x-example: "Param Change"
              description:
                type: string
                x-example: "Update max validators"
              proposer:
                $ref: "#/definitions/Address"
              deposit:
                type: array
                items:
                  $ref: "#/definitions/Coin"
              reward_weight:
                type: number
                format: float
                example: "0.12"
      responses:
        200:
          description: The transaction was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid proposal body
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}:
    get:
      summary: Query a proposal
      description: Query a proposal by id
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TextProposal"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/proposer:
    get:
      summary: Query proposer
      description: Query for the proposer for a proposal
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Proposer"
        400:
          description: Invalid proposal ID
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/deposits:
    get:
      summary: Query deposits
      description: Query deposits by proposalId
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Deposit"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
    post:
      summary: Deposit tokens to a proposal
      description: Send transaction to deposit tokens to a proposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - description: ""
          name: post_deposit_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              depositor:
                $ref: "#/definitions/Address"
              amount:
                type: array
                items:
                  $ref: "#/definitions/Coin"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid proposal id or deposit body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/deposits/{depositor}:
    get:
      summary: Query deposit
      description: Query deposit by proposalId and depositor address
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - type: string
          description: Bech32 depositor address
          name: depositor
          required: true
          in: path
          x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Deposit"
        400:
          description: Invalid proposal id or depositor address
        404:
          description: Found no deposit
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/votes:
    get:
      summary: Query voters
      description: Query voters information by proposalId
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Vote"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
    post:
      summary: Vote a proposal
      description: Send transaction to vote a proposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - description: valid value of `"option"` field can be `"yes"`, `"no"`, `"no_with_veto"` and `"abstain"`
          name: post_vote_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              voter:
                $ref: "#/definitions/Address"
              option:
                type: string
                example: "yes"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid proposal id or vote body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/votes/{voter}:
    get:
      summary: Query vote
      description: Query vote information by proposal Id and voter address
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - type: string
          description: Bech32 voter address
          name: voter
          required: true
          in: path
          x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Vote"
        400:
          description: Invalid proposal id or voter address
        404:
          description: Found no vote
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/tally:
    get:
      summary: Get a proposal's tally result at the current time
      description: Gets a proposal's tally result at the current time. If the proposal is pending deposits (i.e status 'DepositPeriod') it returns an empty tally result.
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TallyResult"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
  /gov/parameters/deposit:
    get:
      summary: Query governance deposit parameters
      description: Query governance deposit parameters. The max_deposit_period units are in nanoseconds.
      produces:
        - application/json
      tags:
        - Governance
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              min_deposit:
                type: array
                items:
                  $ref: "#/definitions/Coin"
              max_deposit_period:
                type: string
                example: "86400000000000"
        400:
          description: <other_path> is not a valid query request path
        404:
          description: Found no deposit parameters
        500:
          description: Internal Server Error
  /gov/parameters/tallying:
    get:
      summary: Query governance tally parameters
      description: Query governance tally parameters
      produces:
        - application/json
      tags:
        - Governance
      responses:
        200:
          description: OK
          schema:
            properties:
              quorum:
                type: string
                example: "0.4000000000"
              threshold:
                type: string
                example: "0.5000000000"
              veto:
                type: string
                example: "0.3340000000"
        400:
          description: <other_path> is not a valid query request path
        404:
          description: Found no tally parameters
        500:
          description: Internal Server Error
  /gov/parameters/voting:
    get:
      summary: Query governance voting parameters
      description: Query governance voting parameters. The voting_period units are in nanoseconds.
      produces:
        - application/json
      tags:
        - Governance
      responses:
        200:
          description: OK
          schema:
            properties:
              voting_period:
                type: string
                example: "86400000000000"
        400:
          description: <other_path> is not a valid query request path
        404:
          description: Found no voting parameters
        500:
          description: Internal Server Error
  /distribution/delegators/{delegatorAddr}/rewards:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    get:
      summary: Get the total rewards balance from all delegations
      description: Get the sum of all the rewards earned by delegations by a single delegator
      produces:
        - application/json
      tags:
        - Distribution
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/DelegatorTotalRewards"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      summary: Withdraw all the delegator's delegation rewards
      description: Withdraw all the delegator's delegation rewards
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid delegator address
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      summary: Query a delegation reward
      description: Query a single delegation reward by a delegator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      summary: Withdraw a delegation reward
      description: Withdraw a delegator's delegation reward from a single validator
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid delegator address or delegation body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /distribution/delegators/{delegatorAddr}/withdraw_address:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    get:
      summary: Get the rewards withdrawal address
      description: Get the delegations' rewards withdrawal address. This is the address in which the user will receive the reward funds
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Address"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      summary: Replace the rewards withdrawal address
      description: Replace the delegations' rewards withdrawal address for a new one.
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              withdraw_address:
                $ref: "#/definitions/Address"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid delegator or withdraw address
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /distribution/validators/{validatorAddr}:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      summary: Validator distribution information
      description: Query the distribution information of a single validator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ValidatorDistInfo"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /distribution/validators/{validatorAddr}/outstanding_rewards:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      summary: Fee distribution outstanding rewards of a single validator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        500:
          description: Internal Server Error
  /distribution/validators/{validatorAddr}/rewards:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    get:
      summary: Commission and self-delegation rewards of a single validator
      description: Query the commission and self-delegation rewards of validator.
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
    post:
      summary: Withdraw the validator's rewards
      description: Withdraw the validator's self-delegation and commissions rewards
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid validator address
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /distribution/community_pool:
    get:
      summary: Community pool parameters
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        500:
          description: Internal Server Error
  /distribution/params:
    get:
      summary: Fee distribution parameters
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            properties:
              base_proposer_reward:
                type: string
              bonus_proposer_reward:
                type: string
              community_tax:
                type: string
        500:
          description: Internal Server Error
  /supply/total:
    get:
      summary: Total supply of coins in the chain
      tags:
        - Supply
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Supply"
        500:
          description: Internal Server Error
  /supply/total/{denomination}:
    parameters:
      - in: path
        name: denomination
        description: Coin denomination
        required: true
        type: string
        x-example: uatom
    get:
      summary: Total supply of a single coin denomination
      tags:
        - Supply
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
             type: string
        400:
          description: Invalid coin denomination
        500:
          description: Internal Server Error
  /market/swap:
    post:
      summary: Swap coin with another coin
      tags:
        - Market
      produces:
        - application/json
      parameters:
        - in: body
          name: Swap coin request body
          schema:
            $ref: "#/definitions/SwapReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        500:
          description: Internal Server Error
    get:
      summary: Query swap result amount
      tags:
        - Market
      produces:
        - application/json
      parameters:
        - in: query
          name: offer_coin
          description: coin expression want to swap
          type: string
          required: true
          x-example: 1000000uluna
        - in: query
          name: ask_denom
          description: Then coin denom want to ask
          type: string
          required: true
          x-example: usdr
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Coin"
        500:
          description: Internal Server Error
  /market/terra_pool_delta:
    get:
      summary: Get Terra pool delta, is usdr amount used for swap operation from the TerraPool.
      tags:
        - Market
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: number
            format: float
            example: "10000000.00"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /market/parameters:
    get:
      summary: Get market params
      tags:
        - Market
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/MarketParams"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/denoms/{denom}/votes:
    post:
      summary: Generate oracle exchange rate vote message containing exchange rate and salt for an prevote
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: The coin denom to vote
          required: true
          type: string
        - in: body
          name: Vote request body
          schema:
            $ref: "#/definitions/VoteReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Bad request
        500:
          description: Internal Server Error
    get:
      summary: Request to get the currently unelected outstanding exchange rate oracle vote
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: The coin denom to get
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ExchangeRateVote"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/denoms/{denom}/votes/{validator}:
    get:
      summary: Request to get the currently unelected outstanding exchange rate oracle vote
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: The coin denom to get
          required: true
          type: string
        - in: path
          name: validator
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ExchangeRateVote"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/voters/{validator}/votes:
    get:
      summary: Request to get the currently outstanding exchange rate oracle votes of a validator
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: validator
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ExchangeRateVote"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/denoms/{denom}/prevotes:
    post:
      summary: Generate oracle exchange rate prevote message containing hash of an vote
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: The coin denom to prevote
          required: true
          type: string
        - in: body
          name: Vote request body
          schema:
            $ref: "#/definitions/PrevoteReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Bad request
        500:
          description: Internal Server Error
    get:
      summary: Request to get the currently outstanding exchange rate oracle prevote
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: The coin denom to get
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ExchangeRatePrevote"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/denoms/{denom}/prevotes/{validator}:
    get:
      summary: Request to get the currently outstanding exchange rate oracle prevote
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: The coin denom to get
          required: true
          type: string
        - in: path
          name: validator
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ExchangeRatePrevote"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/voters/{validator}/prevotes:
    get:
      summary: Request to get the currently outstanding exchange rate oracle prevotes of a validator
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: validator
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ExchangeRatePrevote"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/denoms/{denom}/exchange_rate:
    get:
      summary: Get the current effective exchange rate in Luna for the asset
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: The coin denom to get
          required: true
          type: string
      responses:
        200:
          description: current exchange rate of denom i.e. "1000.0"
          schema:
            type: number
            example: "1872.000000000000000000"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/denoms/exchange_rates:
    get:
      summary: Get all activated exchange rates
      tags:
        - Oracle
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/DecCoin"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/denoms/actives:
    get:
      summary: Get all activated denoms
      tags:
        - Oracle
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
            example: ["ukrw", "usdr"]
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/voters/{validator}/feeder:
    post:
      summary: Generate oracle feeder right delegation message
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: validator
          description: Feeder right delegator
          required: true
          type: string
        - in: body
          name: feeder right delegation request body
          schema:
            $ref: "#/definitions/DelegateReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Bad request
        500:
          description: Internal Server Error
    get:
      summary: Get delegated oracle feeder of a validator
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: validator
          description: Feeder right delegator
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Address"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/voters/{validator}/miss:
    get:
      summary: Get the number of vote periods missed in this oracle slash window.
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: validator
          description: oracle operator
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: number
            format: integer
            example: "100"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /oracle/parameters:
    get:
      summary: Get oracle params
      tags:
        - Oracle
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/OracleParams"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /treasury/tax_rate:
    get:
      summary: Get current tax rate
      tags:
        - Treasury
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: number
            format: float
            example: "0.05"
        500:
          description: Internal Server Error
  /treasury/tax_cap/{denom}:
    get:
      summary: Get tax cap of the denom
      tags:
        - Treasury
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: Denom
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: integer
            example: "100000"
        404:
          description: Not Found
  /treasury/reward_weight:
    get:
      summary: Get current reward weight
      tags:
        - Treasury
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: number
            format: float
            example: "0.05"
            description: 5%
        500:
          description: Internal Server Error
  /treasury/tax_proceeds:
    get:
      summary: Get current tax proceeds
      tags:
        - Treasury
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        500:
          description: Internal Server Error
  /treasury/seigniorage_proceeds:
    get:
      summary: retrieves the size of the seigniorage pool
      tags:
        - Treasury
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: integer
            example: "0"
        500:
          description: Internal Server
  /treasury/parameters:
    get:
      summary: Get treasury module params
      tags:
        - Treasury
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TreasuryParams"
        404:
          description: Not Found
definitions:
  CheckTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          $ref: "#/definitions/KVPair"
    example:
      code: 0
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ""
        - ""
  DeliverTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          $ref: "#/definitions/KVPair"
    example:
      code: 5
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ""
        - ""
  BroadcastTxCommitResult:
    type: object
    properties:
      check_tx:
        $ref: "#/definitions/CheckTxResult"
      deliver_tx:
        $ref: "#/definitions/DeliverTxResult"
      hash:
        $ref: "#/definitions/Hash"
      height:
        type: integer
  KVPair:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Msg:
    type: string
  Address:
    type: string
    description: bech32 encoded address
    example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
  ValidatorAddress:
    type: string
    description: bech32 encoded address
    example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
  Coin:
    type: object
    properties:
      denom:
        type: string
        example: uluna
      amount:
        type: string
        example: "50"
  DecCoin:
    type: object
    properties:
      denom:
        type: string
        example: ukrw
      amount:
        type: string
        example: "50.000"
  Hash:
    type: string
    example: EE5F3404034C524501629B56E0DDC38FAD651F04
  TxQuery:
    type: object
    properties:
      hash:
        type: string
        example: "D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656"
      height:
        type: number
        example: 368
      tx:
        $ref: "#/definitions/StdTx"
      result:
        type: object
        properties:
          log:
            type: string
          gas_wanted:
            type: string
            example: "200000"
          gas_used:
            type: string
            example: "26354"
          tags:
            type: array
            items:
              $ref: "#/definitions/KVPair"
  PaginatedQueryTxs:
    type: object
    properties:
      total_count:
        type: number
        example: 1
      count:
        type: number
        example: 1
      page_number:
        type: number
        example: 1
      page_total:
        type: number
        example: 1
      limit:
        type: number
        example: 30
      txs:
        type: array
        items:
          $ref: "#/definitions/TxQuery"
  StdTx:
    type: object
    properties:
      msg:
        type: array
        items:
          $ref: "#/definitions/Msg"
      fee:
        type: object
        properties:
          gas:
            type: string
          amount:
            type: array
            items:
              $ref: "#/definitions/Coin"
      memo:
        type: string
      signature:
        type: object
        properties:
          signature:
            type: string
            example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
          pub_key:
            type: object
            properties:
              type:
                type: string
                example: "tendermint/PubKeySecp256k1"
              value:
                type: string
                example: "Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH"
          account_number:
            type: string
            example: "0"
          sequence:
            type: string
            example: "0"
  UnsignedStdTx:
    type: object
    properties:
      msg:
        type: array
        items:
          $ref: "#/definitions/Msg"
      fee:
        type: object
        properties:
          gas:
            type: string
          amount:
            type: array
            items:
              $ref: "#/definitions/Coin"
      memo:
        type: string
      signatures:
        type: string
        example: null
  BlockID:
    type: object
    properties:
      hash:
        $ref: "#/definitions/Hash"
      parts:
        type: object
        properties:
          total:
            type: number
            example: 0
          hash:
            $ref: "#/definitions/Hash"
  BlockHeader:
    type: object
    properties:
      chain_id:
        type: string
        example: columbus-3
      height:
        type: number
        example: 1
      time:
        type: string
        example: "2017-12-30T05:53:09.287+01:00"
      num_txs:
        type: number
        example: 0
      last_block_id:
        $ref: "#/definitions/BlockID"
      total_txs:
        type: number
        example: 35
      last_commit_hash:
        $ref: "#/definitions/Hash"
      data_hash:
        $ref: "#/definitions/Hash"
      validators_hash:
        $ref: "#/definitions/Hash"
      next_validators_hash:
        $ref: "#/definitions/Hash"
      consensus_hash:
        $ref: "#/definitions/Hash"
      app_hash:
        $ref: "#/definitions/Hash"
      last_results_hash:
        $ref: "#/definitions/Hash"
      evidence_hash:
        $ref: "#/definitions/Hash"
      proposer_address:
        $ref: "#/definitions/Address"
      version:
        type: object
        properties:
          block:
            type: string
            example: 10
          app:
            type: string
            example: 0
  Block:
    type: object
    properties:
      header:
        $ref: "#/definitions/BlockHeader"
      txs:
        type: array
        items:
          type: string
      evidence:
        type: array
        items:
          type: string
      last_commit:
        type: object
        properties:
          block_id:
            $ref: "#/definitions/BlockID"
          precommits:
            type: array
            items:
              type: object
              properties:
                validator_address:
                  type: string
                validator_index:
                  type: string
                  example: "0"
                height:
                  type: string
                  example: "0"
                round:
                  type: string
                  example: "0"
                timestamp:
                  type: string
                  example: "2017-12-30T05:53:09.287+01:00"
                type:
                  type: number
                  example: 2
                block_id:
                  $ref: "#/definitions/BlockID"
                signature:
                  type: string
                  example: "7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ=="
  BlockQuery:
    type: object
    properties:
      block_meta:
        type: object
        properties:
          header:
            $ref: "#/definitions/BlockHeader"
          block_id:
            $ref: "#/definitions/BlockID"
      block:
        $ref: "#/definitions/Block"
  DelegationDelegatorReward:
    type: object
    properties:
      validator_address:
        $ref: "#/definitions/ValidatorAddress"
      reward:
        type: array
        items:
          $ref: "#/definitions/Coin"
  DelegatorTotalRewards:
    type: object
    properties:
      rewards:
        type: array
        items:
          $ref: "#/definitions/DelegationDelegatorReward"
      total:
        type: array
        items:
          $ref: "#/definitions/Coin"
  BaseReq:
    type: object
    properties:
      from:
        type: string
        example: "terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv"
        description: Sender address or Keybase name to generate a transaction
      memo:
        type: string
        example: "Sent via Terra Station 🚀"
      chain_id:
        type: string
        example: "columbus-3"
      account_number:
        type: string
        example: "0"
      sequence:
        type: string
        example: "1"
      gas:
        type: string
        example: "200000"
      gas_adjustment:
        type: string
        example: "1.2"
      fees:
        type: array
        items:
          $ref: "#/definitions/Coin"
      simulate:
        type: boolean
        example: false
        description: Estimate gas for a transaction (cannot be used in conjunction with generate_only)
  TendermintValidator:
    type: object
    properties:
      address:
        $ref: "#/definitions/ValidatorAddress"
      pub_key:
        type: string
        example: terravalconspub1zcjduepq7mft6gfls57a0a42d7uhx656cckhfvtrlmw744jv4q0mvlv0dypskehfk8
      voting_power:
        type: string
        example: "1000"
      proposer_priority:
        type: string
        example: "1000"
  TextProposal:
    type: object
    properties:
      proposal_id:
        type: integer
      title:
        type: string
      description:
        type: string
      proposal_type:
        type: string
      proposal_status:
        type: string
      final_tally_result:
        $ref: "#/definitions/TallyResult"
      submit_time:
        type: string
      total_deposit:
        type: array
        items:
          $ref: "#/definitions/Coin"
      voting_start_time:
        type: string
  Proposer:
    type: object
    properties:
      proposal_id:
        type: string
      proposer:
        type: string
  Deposit:
    type: object
    properties:
      amount:
        type: array
        items:
          $ref: "#/definitions/Coin"
      proposal_id:
        type: string
      depositor:
        $ref: "#/definitions/Address"
  TallyResult:
    type: object
    properties:
      yes:
        type: string
        example: "0.0000000000"
      abstain:
        type: string
        example: "0.0000000000"
      no:
        type: string
        example: "0.0000000000"
      no_with_veto:
        type: string
        example: "0.0000000000"
  Vote:
    type: object
    properties:
      voter:
        type: string
      proposal_id:
        type: string
      option:
        type: string
  Validator:
    type: object
    properties:
      operator_address:
        $ref: "#/definitions/ValidatorAddress"
      consensus_pubkey:
        type: string
        example: terravalconspub1zcjduepq7mft6gfls57a0a42d7uhx656cckhfvtrlmw744jv4q0mvlv0dypskehfk8
      jailed:
        type: boolean
      status:
        type: integer
      tokens:
        type: string
      delegator_shares:
        type: string
      description:
        type: object
        properties:
          moniker:
            type: string
          identity:
            type: string
          website:
            type: string
          details:
            type: string
      bond_height:
        type: string
        example: "0"
      bond_intra_tx_counter:
        type: integer
        example: 0
      unbonding_height:
        type: string
        example: "0"
      unbonding_time:
        type: string
        example: "1970-01-01T00:00:00Z"
      commission:
        type: object
        properties:
          rate:
            type: string
            example: "0"
          max_rate:
            type: string
            example: "0"
          max_change_rate:
            type: string
            example: "0"
          update_time:
            type: string
            example: "1970-01-01T00:00:00Z"
  Delegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      shares:
        type: string
      height:
        type: integer
  UnbondingDelegationPair:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      entries:
        type: array
        items:
          $ref: "#/definitions/UnbondingEntries"
  UnbondingEntries:
    type: object
    properties:
      initial_balance:
        type: string
      balance:
        type: string
      creation_height:
        type: string
      min_time:
        type: string
  UnbondingDelegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      initial_balance:
        type: string
      balance:
        type: string
      creation_height:
        type: integer
      min_time:
        type: integer
  Redelegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_src_address:
        type: string
      validator_dst_address:
        type: string
      entries:
        type: array
        items:
          $ref: "#/definitions/Redelegation"
  RedelegationEntry:
    type: object
    properties:
      creation_height:
        type: integer
      completion_time:
        type: integer
      initial_balance:
        type: string
      balance:
        type: string
      shares_dst:
        type: string
  ValidatorDistInfo:
    type: object
    properties:
      operator_address:
        $ref: "#/definitions/ValidatorAddress"
      self_bond_rewards:
        type: array
        items:
          $ref: "#/definitions/Coin"
      val_commission:
        type: array
        items:
          $ref: "#/definitions/Coin"
  PublicKey:
    type: object
    properties:
      type:
        type: string
      value:
        type: string
  SigningInfo:
    type: object
    properties:
      start_height:
        type: string
      index_offset:
        type: string
      jailed_until:
        type: string
      missed_blocks_counter:
        type: string
  ParamChange:
    type: object
    properties:
      subspace:
        type: string
        example: "staking"
      key:
        type: string
        example: "MaxValidators"
      subkey:
        type: string
        example: ""
      value:
        type: object
  Supply:
    type: object
    properties:
      total:
        type: array
        items:
          $ref: "#/definitions/Coin"
  BaseAccount:
    type: object
    properties:
      account_number:
        type: string
      address:
        type: string
      coins:
        type: array
        items:
          $ref: "#/definitions/Coin"
      public_key:
        type: string
      sequence:
        type: string
  Account:
    type: object
    properties:
      type:
        type: string
        example: "auth/Account"
      value:
        $ref: "#/definitions/BaseAccount"
  BaseVestingAccount:
    type: object
    properties:
      BaseAccount:
        $ref: "#/definitions/BaseAccount"
      original_vesting:
        type: array
        items:
          $ref: "#/definitions/Coin"
      delegated_free:
        type: array
        items:
          $ref: "#/definitions/Coin"
      delegated_vesting:
        type: array
        items:
          $ref: "#/definitions/Coin"
      end_time:
        type: string
        example: "0"
  Schedule:
    type: object
    properties:
      start_time:
        type: string
        example: "1556085600"
      end_time:
        type: string
        example: "1556085600"
      ratio:
        type: string
        example: "0.100000000000000000"
  VestingSchedule:
    type: object
    properties:
      denom:
        type: string
        example: "usdr"
      lazy_schedules:
        type: array
        items:
          $ref: "#/definitions/Schedule"
  BaseLazyGradedVestingAccount:
    type: object
    properties:
      BaseVestingAccount:
        $ref: "#/definitions/BaseVestingAccount"
      vesting_schedules:
        type: array
        items:
          $ref: "#/definitions/VestingSchedule"
  LazyGradedVestingAccount:
    type: object
    properties:
      type:
        type: string
        example: "core/LazyGradedVestingAccount"
      value:
        $ref: "#/definitions/BaseLazyGradedVestingAccount"
  SwapReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      offer_coin:
        $ref: "#/definitions/Coin"
      ask_denom:
        type: string
        example: uluna
  MarketParams:
    type: object
    properties:
      daily_luna_delta_limit:
        type: number
        example: "0.005"
      min_swap_spread:
        type: number
        example: "0.02"
      max_swap_spread:
        type: number
        example: "0.1"
  PrevoteReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      exchange_rate:
        type: number
        example: "1000.0"
        description: "exchange rate of Luna in denom currency is to make provte hash; this field is required to submit prevote in case absense of hash"
      salt:
        type: string
        example: "abcd"
        description: "salt is to make prevote hash; this field is required to submit prevote in case  absense of hash"
      hash:
        type: string
        example: "061bf1e27dfff121f40c826e593c8a28ec299a02"
        description: "hex string; hash of next vote; empty == skip prevote"
      validator:
        $ref: "#/definitions/ValidatorAddress"
  VoteReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      exchange_rate:
        type: number
        example: "1000.0"
        description: "proof exchange rate of Luna in denom currency was used to make prevote hash; initial prevote does not require this field"
      salt:
        type: string
        example: "abcd"
        description: "proof salt was used to make prevote hash; initial prevote does not require this field"
      validator:
        $ref: "#/definitions/ValidatorAddress"
  DelegateReq:
    type: object
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      feeder:
        $ref: "#/definitions/Address"
  ExchangeRateVote:
    type: object
    properties:
      exchange_rate:
        type: number
        example: "0.01241"
      denom:
        type: string
        example: "ukrw"
      voter:
        $ref: "#/definitions/ValidatorAddress"
  ExchangeRatePrevote:
    type: object
    properties:
      hash:
        type: string
        example: "061bf1e27dfff121f40c826e593c8a28ec299a02"
      denom:
        type: string
        example: "uusd"
      voter:
        $ref: "#/definitions/ValidatorAddress"
      submit_block:
        type: number
        example: "1"
  OracleParams:
    type: object
    properties:
      vote_period:
        type: number
        example: "900"
      vote_threshold:
        type: number
        example: "0.67"
      drop_threshold:
        type: number
        example: "10"
      oracle_reward_band:
        type: number
        example: "0.02"
  PolicyConstraints:
    type: object
    properties:
      rate_min:
        type: number
        format: float
        example: "0.0005"
        description: "0.05%"
      rate_max:
        type: number
        format: float
        example: "0.01"
        description: "1%"
      cap:
        $ref: "#/definitions/Coin"
      change_max:
        type: number
        format: float
        example: "0.00025"
        description: "0.025%"
  TreasuryParams:
    type: object
    properties:
      tax_policy:
        $ref: "#/definitions/PolicyConstraints"
      reward_policy:
        $ref: "#/definitions/PolicyConstraints"
      seigniorage_burden_target:
        type: number
        format: float
        example: "0.67"
        description: "67%"
      mining_increment:
        type: number
        format: float
        example: "1.07"
      window_short:
        type: integer
        example: "4"
      window_long:
        type: integer
        example: "52"
      window_probation:
        type: integer
        example: "12"
      oracle_share:
        type: number
        format: float
        example: "0.1"
      budget_share:
        type: number
        format: float
        example: "0.9"
  MultiSignPubKey:
    type: object
    properties:
      threshold:
        type: number
        example: 1
      pubkeys:
        type: array
        items:
          type: string
          example: terrapub1addwnpepq2l6pwj8h9fwxdjuge7lazu0sszpkck0nlhjag6q9drffrd93atywdt8ksu
  MultiSignReq:
    type: object
    properties:
      tx:
        $ref: "#/definitions/UnsignedStdTx"
      chain_id:
        type: string
        example: "columbus-2"
      signatures:
        type: array
        items:
          $ref: "#/definitions/StdSignature"
      signature_only:
        type: boolean
      pubkey:
        $ref: "#/definitions/MultiSignPubKey"
  StdSignature:
    type: object
    properties:
      signature:
        type: string
        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
      pub_key:
        type: object
        properties:
          type:
            type: string
            example: "tendermint/PubKeySecp256k1"
          value:
            type: string
            example: "Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH"
  EstimateFeeResp:
    type: object
    properties:
      fees:
        type: array
        items:
          $ref: "#/definitions/Coin"
      gas:
        type: number
        format: integer
        example: "10000"
